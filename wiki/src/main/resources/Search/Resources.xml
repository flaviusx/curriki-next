<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc>
<web>Search</web>
<name>Resources</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent></parent>
<creator>XWiki.dward</creator>
<author>XWiki.dward</author>
<customClass></customClass>
<contentAuthor>XWiki.dward</contentAuthor>
<creationDate>1218122764000</creationDate>
<date>1234809389000</date>
<contentUpdateDate>1234809389000</contentUpdateDate>
<version>111.1</version>
<title></title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment>CURRIKI-3912 - Only folders should not show parent</comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/1.0</syntaxId>
<object>
<class>
<name>XWiki.TagClass</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<tags>
<cache>0</cache>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>tags</name>
<number>1</number>
<prettyName>Tags</prettyName>
<relationalStorage>1</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>30</size>
<unmodifiable>0</unmodifiable>
<values></values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</tags>
</class>
<name>Search.Resources</name>
<number>0</number>
<className>XWiki.TagClass</className>
<property>
<tags/>
</property>
</object>
<content>## vim: ts=4:sw=4
{pre}
## start=0&amp;limit=25&amp;sort=title&amp;dir=ASC
## terms=&amp;subject=&amp;filetype=&amp;level=&amp;language=&amp;ict=&amp;special=
## return  root: results, totalProperty: totalCount
##   pagename, title, ict, contributor, contributorName, review
#**
  * Get ICT information about a resource
  *
  * resource   Curriki Asset Document
  *#
#macro(searchResourceICT $resource) ##{
	#set($ret_ict = "")
	#set($ret_ict = $!resource.getObject("CurrikiCode.AssetClass").getProperty("instructional_component").getValue())
	#if($ret_ict == "" || $ret_ict.size() == 0) ## {
		## No ICT set -- nothing to do
		#set($ret_ictIcon = "")
		#set($ret_ictRaw = "")
		#set($ret_ictText = "")
	#else ## } {
		#if($ret_ict.size() &gt; 1) ## {
		##Multiple
		#set($ret_ictIcon = $xwiki.getSkinFile("icons/ICTIcon-Multiple.gif"))
		#set($text = $msg.get('search.results.col.ict.multiple'))
		#set($ret_ictRaw = "multiple")
		#set($ret_ictText = "search.selector.ict.${ret_ictRaw}")
		#set($ret_ictText = $msg.get($ret_ictText))
		#else ## } {
		##Single
		#set($ret_ict = $ret_ict.get(0))
		#set($ret_ictRaw = $ret_ict)
		#set($ret_ictIcon = "${ret_ict.substring(0,1).toUpperCase()}${ret_ict.substring(1)}")
		#set($ret_ictIcon = $ret_ictIcon.replaceFirst("_.*", ""))
		#set($ret_ictIcon = $xwiki.getSkinFile("icons/ICTIcon-${ret_ictIcon}.gif"))
		#set($ret_ictText = $ret_ict.replaceFirst("_", "."))
		#set($ret_ictText = "search.selector.ict.${ret_ictText}")
		#set($ret_ictText = $msg.get($ret_ictText))
		#end ## if not multiple ## }
	#end ## if not empty ## }
#end ##}
#**
  * Get the title for a resource
  *
  * resource   Curriki Asset Document
  *#
#macro(searchResourceTitle $resource) ##{
	#asset_findtitle($resource)
	#set($ret_title = $currikiTitle)
	#if(!$ret_title || $ret_title.length() == 0) ## {
		#set($ret_title = $msg.get("caption.untitled"))
	#end ## }
	#set($ret_title = $ret_title.replace("'", "&amp;#39;"))
#end ##}
#**
  * Get the review for a resource
  *
  * resource   Curriki Asset Document
  *#
#macro(searchResourceReview $resource) ##{
	#set($ret_review = "")
	#set($ret_review = $!resource.getObject("CRS.CurrikiReviewStatusClass").getProperty("status").getValue())
#end ##}
#**
  * Get the asset type for a resource
  *
  * resource   Curriki Asset Document
  *#
#macro(searchResourceAssetType $resource) ##{
	#set($ret_assetType = "")
	#set($meta = $resource.getMetadata())
	#foreach($prop in $meta) ##{
		#if($prop.getName() == 'assetType') ##{
			#set($ret_assetType = $prop.getValue())
		#end ##}
	#end ##}
#end ##}
#**
  * Get the category for a resource
  *
  * resource   Curriki Asset Document
  *#
#macro(searchResourceCategory $resource) ##{
	#set($ret_category = $!resource.getCategory())
	#set($ret_subcategory = $!resource.getCategorySubtype())
	#if("$!ret_subcategory" == "") ##{
		#set($ret_subcategory = "unknown")
	#end ##}
#end ##}
#**
  * Get the description for a resource
  *
  * resource   Curriki Asset Document
  *#
#macro(searchResourceDescription $resource) ##{
	#set($ret_desc = "")
	#set($ret_desc = $!resource.getObject("CurrikiCode.AssetClass").getProperty("description").getValue())
	#set($ret_desc = $ret_desc.replaceAll('\\', '\\\\').replace("'", "&amp;#39;").replaceAll("[\n|\r]+", "&lt;br /&gt;"))
#end ##}
#**
  * Get the framework items for a resource
  *
  * resource   Curriki Asset Document
  *#
#macro(searchResourceFWItems $resource) ##{
	#set($ret_FW = "")
	#set($subj = $!resource.getValue('fw_items'))
	#set($isFirst = true)
	#foreach($item in $subj) ## {
		#if($item != "FW_masterFramework.WebHome") ## {
			#if($isFirst) ##{
				#set($isFirst = false)
			#else ##}{
				#set($ret_FW = "$ret_FW, ")
			#end ## }
			#set($ret_FW = "$ret_FW'$item'")
		#end ## }
	#end ## }
	#set($ret_FW = "[ $ret_FW ]")
#end ##}
#**
  * Get the educational levels for a resource
  *
  * resource   Curriki Asset Document
  *#
#macro(searchResourceEL $resource) ##{
	#set($ret_lvl = "")
	#set($levl = $!resource.getValue('educational_level'))
	#set($isFirst = true)
	#foreach($item in $levl) ## {
		#if($isFirst) ##{
			#set($isFirst = false)
		#else ##}{
			#set($ret_lvl = "$ret_lvl, ")
		#end ## }
		#set($ret_lvl = "$ret_lvl'$item'")
	#end ## }
	#set($ret_lvl = "[ $ret_lvl ]")
#end ##}
#**
  * Get the contributor name for a resource
  *
  * resource   Curriki Asset Document
  *#
#macro(searchResourceContributorName $resource) ##{
	#set($ret_cname = "")
	#set($ret_cname = $xwiki.getUserName($resource.creator, false))
	#set($ret_cname = $ret_cname.replace("'", "&amp;#39;"))
	#set($ret_cname = $ret_cname.replaceAll("[\n|\r]+", "&lt;br /&gt;"))
#end ##}
#**
  * Get the parent resources for a resource
  *
  * resource   Curriki Asset Document
  *#
#macro(searchResourceParents $resource) ##{
	#set($ret_parents = "")
	#set($isComposite = $!resource.isFolder())
	#if(!$isComposite) ##{
		#set($sql = ", BaseObject as composite, BaseObject as subasset, StringProperty as cprops, StringProperty as sprops where doc.name != 'Favorites' and doc.name != 'WebHome' and composite.name=doc.fullName and composite.className='CurrikiCode.CompositeAssetClass' and composite.id=cprops.id.id and cprops.id.name='type' and (cprops.value='collection' or cprops.value='folder') and subasset.name=doc.fullName and subasset.id=sprops.id.id and subasset.className='CurrikiCode.SubAssetClass' and sprops.id.name='assetpage' and sprops.value='${resource.fullName}' order by doc.name")
		#set($parentList = $xwiki.searchDocuments($sql))
		#if($parentList.size() &gt; 0) ##{
			#set($isFirstParent = true)
			#foreach($parentPage in $parentList) ##{
				#if($xwiki.hasAccessLevel("view", $parentPage)) ##{
					#set($parentAsset = $xwiki.getDocument($parentPage))
					#searchResourceInfo($parentAsset false)
					#set($pJSON = "{ 'page':'${parentAsset.fullName}' ,'title':'${ret_title}' ,'assetType':'${ret_assetType}' ,'category':'${ret_category}' ,'subcategory':'${ret_subcategory}' ,'ict':'${ret_ictRaw}' ,'ictText':'${ret_ictText}' ,'ictIcon':'${ret_ictIcon}' ,'contributor':'${parentAsset.creator}' ,'contributorName':'${ret_cname}' ,'review':'${ret_review}' ,'description':'${ret_desc}' ,'fwItems':${ret_FW} ,'levels':${ret_lvl} ,'updated':'${parentAsset.date}' }")
					#if($isFirstParent) ##{
						#set($isFirstParent = false)
					#else ##}{
						#set($ret_parents = "$ret_parents, ")
					#end ## }
					#set($ret_parents = "${ret_parents}${pJSON}")
				#end ##}
			#end ##}
		#end ##}
	#end ##}
	#set($ret_parents = "[ $ret_parents ]")
#end ##}
#**
  * Main macro to get the resource information
  *
  * resource   Curriki Asset Document
  * getParents true if need to get parent information
  *#
#macro(searchResourceInfo $resource $getParents) ##{
##
#if($getParents) ##{
	#searchResourceParents($resource)
#end ##}
#searchResourceTitle($resource)
#searchResourceICT($resource)
#searchResourceReview($resource)
#searchResourceAssetType($resource)
#searchResourceCategory($resource)
#searchResourceDescription($resource)
#searchResourceFWItems($resource)
#searchResourceEL($resource)
#searchResourceContributorName($resource)
#set($ret_info = "{ 'page':'${resource.fullName}' ,'title':'${ret_title}' ,'assetType':'${ret_assetType}' ,'category':'${ret_category}' ,'subcategory':'${ret_subcategory}','ict':'${ret_ictRaw}' ,'ictText':'${ret_ictText}' ,'ictIcon':'${ret_ictIcon}' ,'contributor':'${resource.creator}' ,'contributorName':'${ret_cname}' ,'review':'${ret_review}' ,'description':'${ret_desc}' ,'fwItems':${ret_FW} ,'levels':${ret_lvl} ,'parents':${ret_parents} ,'updated':'${resource.date}' } ")
#end ##}
##
##
#set($lucene = $xwiki.getPlugin("lucene"))
#if(!$lucene) ##{
	{'resultCount':'0', 'rows':[]}
#else ## }{
	##
	## Set start and limit for result list
	##
	#set($Integer = 0)
	#set($maxResults = $Integer.parseInt($msg.get('search.results.max')))
	#set($start = 0)
	#if("$!request.start" != "") ##{
		#set($start = $Integer.parseInt($request.start))
	#end ##}
	#set($start = 1 + $start)
	#set($start = "$start")
	#set($limit = "25")
	#if("$!request.limit" != "") ##{
		#set($limit = $request.limit)
	#end ##}
	##
	## Set sort field
	##
	#set($sortField1 = 'title.untokenized')
	#set($sortField2 = 'CurrikiCode.AssetClass.instructional_component.key.untokenized')
	#if($!request.sort != "") ##{
		#if($request.sort == "title") ##{
			#set($sortField1 = 'title.untokenized')
			#set($sortField2 = 'CurrikiCode.AssetClass.instructional_component.key.untokenized')
		#end ##}
		#if($request.sort == "ictText") ##{
			#set($sortField1 = 'CurrikiCode.AssetClass.instructional_component.key.untokenized')
			#set($sortField2 = 'title.untokenized')
		#end ##}
		#if($request.sort == "contributor") ##{
			#set($sortField1 = 'creator.untokenized')
			#set($sortField2 = 'title.untokenized')
		#end ##}
		#if($request.sort == "rating") ##{
			#set($sortField1 = '-CRS.CurrikiReviewStatusClass.status.untokenized')
			#set($sortField2 = 'title.untokenized')
		#end ##}
		#if($request.sort == "updated") ##{
			#set($sortField1 = 'date')
			#set($sortField2 = 'title.untokenized')
		#end ##}
	#end ##}
	#if($!request.dir == "DESC") ##{
		#set($sortField1 = "-${sortField1}")
		#if($request.sort == "rating") ##{
			#set($sortField1 = 'CRS.CurrikiReviewStatusClass.status.untokenized')
		#end ##}
	#end ##}
	#set($sortFields = "${sortField1},${sortField2}")
	#set($sortFields = $sortFields.split(","))
	##
	## Create query
	##
	#set($q = $xwiki.arrayList)
	##
	## Terms
	#if($!request.terms != "") ##{
		#set($junk = $q.add("${request.terms}"))
	#end ##}
	##
	## Subject
	#if($!request.subject != "") ##{
		#if($!request.subject != "UNCATEGORIZED") ##{
			#set($junk = $q.add("CurrikiCode.AssetClass.fw_items:${request.subject}"))
		#else ##} {
			#set($ucqry = "where doc.web='FW_masterFramework' and doc.parent='FW_masterFramework.WebHome' order by doc.title")
			#set($topics = $xwiki.searchDocuments($ucqry))
			#foreach($topic in $topics)##{
				#set($junk = $q.add("-CurrikiCode.AssetClass.fw_items:${topic}"))
			#end ##}
		#end ##}
	#end ##}
	##
	## FileType
	#if($!request.filetype != "") ##{
		#set($junk = $q.add("CurrikiCode.AssetClass.category:${request.filetype}"))
	#end ##}
	##
	## Level
	#if($!request.level != "") ##{
		#set($junk = $q.add("CurrikiCode.AssetClass.educational_level.key:${request.level}"))
	#end ##}
	##
	## Language
	#if($!request.language != "") ##{
		#set($junk = $q.add("CurrikiCode.AssetClass.language:${request.language}"))
	#end ##}
	##
	## ICT
	#if($!request.ict != "") ##{
		#set($junk = $q.add("CurrikiCode.AssetClass.instructional_component.key:${request.ict}"))
	#end ##}
	##
	## Category
	#if($!request.category != "") ##{
		#if($request.category == "unknown") ##{
			#set($junk = $q.add("CurrikiCode.AssetClass.category:(${request.category} OR attachment)"))
		#else ##}{
			#set($junk = $q.add("CurrikiCode.AssetClass.category:${request.category}"))
		#end ##}
	#end ##}
	##
	## Other
	#if($!request.other != "") ##{
		#set($junk = $q.add("(${request.other})"))
	#end ##}
	##
	## Review
	## partners, highest_rated
	#if($!request.review != "") ##{
		#if($request.review == "partners")##{
			#set($junk = $q.add("CRS.CurrikiReviewStatusClass.status:200"))
		#end ##}
		#if($request.review == "highest_rated")##{
			#set($junk = $q.add("CRS.CurrikiReviewStatusClass.status:(800 OR 700)"))
		#end ##}
	#end ##}
	##
	## Special
	## contributions, collections, resources, updated
	#if($!request.special != "") ##{
		#if($request.special == "contributions")##{
			#set($junk = $q.add("creator:${context.user}")) ## This is the full USERNAME, not realname
		#end ##}
		#if($request.special == "collections")##{
			#set($junk = $q.add("CurrikiCode.CompositeAssetClass.type:collection"))


		#end ##}
		#if($request.special == "reviewed")##{
			#set($junk = $q.add("CRS.CurrikiReviewStatusClass.status:(200 OR 300 OR 400 OR 500 OR 600 OR 700 OR 800)"))
		#end ##}
		#if($request.special == "updated")##{
			#set($dt = $xwiki.curriki.formatDate($xwiki.curriki.getDateMinusDays($msg.get('search.resource.special.selector.updated.days')), "yyyyMMdd"))
			#set($upq = "date:[$dt TO 29991231]")
			#set($junk = $q.add($upq))
		#end ##}
		#if($request.special == "groups")##{
			#set($junk = $q.add("web:Group_Coll_*"))
		#end ##}
	#end ##}
	##
	## Put together query conditions
	#set($conditions = "")
	#foreach($condition in $q) ##{
		#set($conditions = "$conditions AND $condition")
	#end ##}
	##
	## General query information
	#set($wikinames = "xwiki")
	#set($languages = "default,en")
	#set($include = "CurrikiCode.AssetClass.fw_items:FW_masterFramework.WebHome")
	#set($exclude = "AND NOT CurrikiCode.TextAssetClass.syntax:cboe AND NOT web:AssetTemp AND NOT web:Coll_Templates AND NOT name:WebHome AND NOT name:WebPreferences AND NOT name:MyCollections AND NOT name:SpaceIndex AND NOT CurrikiCode.AssetClass.hidden_from_search:1")
	#set($luceneQuery = "$include $conditions $exclude")
	##
	## Do query
	##
	#set($searchResults = $lucene.getSearchResults($luceneQuery, $sortFields, $languages))
	#set($results = $searchResults.getResults($start, $limit))
	#set($resultCount = $searchResults.totalHitcount)
	#set($modifiedCount = 0)
	#set($modifiedCount = $!resultCount)
	#if($modifiedCount &gt; $maxResults) ##{
	#set($modifiedCount = $maxResults)
	#end ##}

	##
	## List out results
	##
	#if("$!resultCount" == "") ##{
		#set($resultCount = 0)
	#end ##}
{
'rows':[
	#set($first = true)
	#foreach($result in $results) ##{
		##
		## Get each result
		#set($d = $xwiki.curriki.fetchAsset("${result.web}.${result.name}"))
		#searchResourceInfo($d true)
		##
		##
		#if($first) ##{
			#set($first = false)
		#else ##} {
,
		#end ##}
$ret_info
	#end ##}
]
,'resultCount':'${modifiedCount}'
,'totalResults':'${resultCount}'
}
#end ## }
{/pre}</content>
</xwikidoc>
