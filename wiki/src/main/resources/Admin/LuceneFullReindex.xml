<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc>
<web>Admin</web>
<name>LuceneFullReindex</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent></parent>
<creator>XWiki.LudovicDubost</creator>
<author>XWiki.LudovicDubost</author>
<customClass></customClass>
<contentAuthor>XWiki.LudovicDubost</contentAuthor>
<creationDate>1225756197000</creationDate>
<date>1225756494000</date>
<contentUpdateDate>1225756494000</contentUpdateDate>
<version>3.1</version>
<title></title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment>Fix</comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/1.0</syntaxId>
<object>
<class>
<name>XWiki.TagClass</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<tags>
<cache>0</cache>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>tags</name>
<number>1</number>
<prettyName>Tags</prettyName>
<relationalStorage>1</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>30</size>
<unmodifiable>0</unmodifiable>
<values></values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</tags>
</class>
<name>Admin.LuceneFullReindex</name>
<number>0</number>
<className>XWiki.TagClass</className>
<property>
<tags/>
</property>
</object>
<content>1 Lucene Search

#set($lucene = $xwiki.getPlugin("lucene"))
#set($itemsPerPage = "10")
#set($doRebuild = $request.getParameter("rebuild"))
#if($doRebuild=="yes")
#if($request.confirm &amp;&amp; $request.confirm=="1")
#if($lucene)
#set($documentCount = $lucene.rebuildIndex())
#if(${documentCount}&gt;=0)
Started index rebuild with $documentCount documents. Will take some time depending on the number of pages/attachments.
#else
Index rebuild failed.
#end
#end
#else
#warning("Are you really really sure you want to delete the current index and perform a full reindex. [Yes I'm sure. Do the reindex&gt;$doc.fullName?rebuild=yes&amp;confirm=1]")
#end
#else
#if($xwiki.hasAdminRights())
#warning("This page allows a full reindex, deleting the current index. This can be very long")
[Make a full reindex&gt;${doc.web}.${doc.name}?rebuild=yes] - $lucene.getPreIndexQueueSize() documents in pre-queue - $lucene.getQueueSize() documents in queue - $lucene.getActiveQueueSize() documents in active queue - $lucene.getLuceneDocCount() documents in indexer queue
#end
#end

#set($query = $request.getParameter("text"))
#if(!$query)
#set($query = "")
#end
{pre}
&lt;form action="$doc.name" method="post"&gt;
&lt;input type="text" name="text" value="$query" /&gt;
&lt;input type="submit" value="$msg.get("tosearch")"/&gt;
&lt;/form&gt;
{/pre}
#if($query != "")
#set($lucene = $xwiki.getPlugin("lucene"))
#if($lucene)
#set($wikinames = "xwiki")
#set($languages = "")
#set($firstIndex = $request.getParameter("firstIndex"))
#if(!$firstIndex)
#set($firstIndex = "1")
#end
#set($searchresults = $lucene.getSearchResults($query, $wikinames, $languages, $xwiki))
#set($results = $searchresults.getResults($firstIndex,$itemsPerPage))
  #if($results.size()&gt;0)
#if($xwiki.isVirtual())
#macro(resultlink $xwiki $web $name)
   * [${result.wiki}:${result.web}.${result.name}] by $msg.get("lastauthor") [$result.author]
#end
#else
#macro(resultlink $xwiki $web $name)
 #set($resDoc = $xwiki.getDocument("${result.web}.${result.name}"))
 #if ($resDoc.displayTitle)
  #set($title = $resDoc.displayTitle)
 #else
  #set($title = $result.name)
 #end
   * [$title&gt;${result.web}.${result.name}] by [$result.author]
#end
#end
#set($lastIndex=$searchresults.getEndIndex($firstIndex, $itemsPerPage))
#if($searchresults.hitcount==1)
{pre} $msg.get("oneresult"):{/pre}
#else
{pre}$msg.get("results") $firstIndex - $lastIndex $msg.get("of") ${searchresults.hitcount}:{/pre}

#if($searchresults.hasPrevious($firstIndex))
[$msg.get("previous")&gt;${doc.web}.${doc.name}?query=$query&amp;firstIndex=$searchresults.getPreviousIndex($firstIndex,$itemsPerPage)]
#else
$msg.get("previous")
#end
 | 
#if($searchresults.hasNext($firstIndex,$itemsPerPage))
[$msg.get("next")&gt;${doc.web}.${doc.name}?query=$query&amp;firstIndex=$searchresults.getNextIndex($firstIndex,$itemsPerPage)]
#else
$msg.get("next")
#end
#end
#foreach($result in $results)
#if($result.type=='wikipage')
#resultlink(${result.wiki} ${result.web} ${result.name})
#end
#if($result.type=='attachment')
* &lt;a href="${result.url}"&gt;${result.filename}&lt;/a&gt; : Attachment on [${result.web}.${result.name}] by [$result.author]
#end
#end
#else
$msg.get("noresults")
#end

#else
lucene plugin not found
#end
#end
</content></xwikidoc>