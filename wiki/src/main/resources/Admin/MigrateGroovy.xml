<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc>
<web>Admin</web>
<name>MigrateGroovy</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent></parent>
<creator>XWiki.dward</creator>
<author>XWiki.dward</author>
<customClass></customClass>
<contentAuthor>XWiki.dward</contentAuthor>
<creationDate>1178821477000</creationDate>
<date>1179518164000</date>
<contentUpdateDate>1203116887000</contentUpdateDate>
<version>1.39</version>
<title></title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/1.0</syntaxId>
<object>
<class>
<name>XWiki.TagClass</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<tags>
<cache>0</cache>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>tags</name>
<number>1</number>
<prettyName>Tags</prettyName>
<relationalStorage>1</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>30</size>
<unmodifiable>0</unmodifiable>
<values></values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</tags>
</class>
<name>Admin.MigrateGroovy</name>
<number>0</number>
<className>XWiki.TagClass</className>
<property>
<tags/>
</property>
</object>
<content>&lt;%
import com.xpn.xwiki.*;
import com.xpn.xwiki.objects.classes.*;

try {
sql = ", BaseObject as obj where obj.name=doc.fullName AND doc.web != 'AssetTemp' AND (obj.className='XWiki.AssetClass' or obj.className='XWiki.AssetLicenseClass')";

results = xwiki.xWiki.getStore().searchDocumentsNames(sql, context.context);

for(docname in results) {
try {
	doc = xwiki.getXWiki().getDocument(docname, context.context);
	changed = false;

	for(obj in doc.getObjects("XWiki.AssetClass")){
		ictchanged = false;
		ictnew = "";

		ictprop = obj.get('instructional_component');
		if (ictprop != null){
			ictval = ictprop.getValue();

			if (ictval.equals("activity")){
				ictnew = "activity_excercise";
				ictchanged = true;
			} else
			if (ictval.equals("animation")){
				ictnew = "resource_animation";
				ictchanged = true;
			} else
			if (ictval.equals("application")){
				ictnew = "other";
				ictchanged = true;
			} else
			if (ictval.equals("assesment")){
				ictnew = "curriculum_assessment";
				ictchanged = true;
			} else
			if (ictval.equals("audio")){
				ictnew = "resource_speech";
				ictchanged = true;
			} else
			if (ictval.equals("book")){
				ictnew = "book_fiction|book_nonfiction|book_readings|book_textbook";
				ictchanged = true;
			} else
			if (ictval.equals("textbook")){
				ictnew = "book_textbook";
				ictchanged = true;
			} else
			if (ictval.equals("course")){
				ictnew = "curriculum_course";
				ictchanged = true;
			} else
			if (ictval.equals("collection")){
				ictnew = "resource_collection";
				ictchanged = true;
			} else
			if (ictval.equals("diagram")){
				ictnew = "resource_diagram";
				ictchanged = true;
			} else
			if (ictval.equals("exercise")){
				ictnew = "activity_exercise";
				ictchanged = true;
			} else
			if (ictval.equals("experiment")){
				ictnew = "activity_lab";
				ictchanged = true;
			} else
			if (ictval.equals("graph")){
				ictnew = "resource_table";
				ictchanged = true;
			} else
			if (ictval.equals("graphic")){
				ictnew = "resource_diagram";
				ictchanged = true;
			} else
			if (ictval.equals("index")){
				ictnew = "resource_index";
				ictchanged = true;
			} else
			if (ictval.equals("image")){
				ictnew = "resource_diagram|resource_photograph";
				ictchanged = true;
			} else
			if (ictval.equals("learningobject")){
				ictnew = "other";
				ictchanged = true;
			} else
			if (ictval.equals("lessonplan")){
				ictnew = "curriculum_lp";
				ictchanged = true;
			} else
			if (ictval.equals("lecture")){
				ictnew = "resource_speech";
				ictchanged = true;
			} else
			if (ictval.equals("presentation")){
				ictnew = "resource_presentation";
				ictchanged = true;
			} else
			if (ictval.equals("professionaldevelopment")){
				ictnew = "resource_collection";
				ictchanged = true;
			} else
			if (ictval.equals("resourceslist")){
				ictnew = "resource_index";
				ictchanged = true;
			} else
			if (ictval.equals("text")){
				ictnew = "resource_script";
				ictchanged = true;
			} else
			if (ictval.equals("video")){
				ictnew = "other";
				ictchanged = true;
			} else
			if (ictval.equals("website")){
				ictnew = "other";
				ictchanged = true;
			} else
			if (ictval.equals("worksheet")){
				ictnew = "activity_worksheet";
				ictchanged = true;
			} else
			if (ictval.equals("other")){
				ictchanged = false;
			} else
			if (ictval.equals("choose")){
				ictnew = "other";
				ictchanged = true;
			}
		} else {
			ictnew = "other";
			ictchanged = true; // Empty value
		}

		if (ictchanged){
//			println("Changing ICT " + doc.getFullName() + " from " + ictval + " to " + ictnew);
/*
			ictprop.setValue(ictnew);
*/
obj.set("instructional_component2", ictnew, context.context);
			changed = true;
		}


		elchanged = false;
		elnew = "";

		elprop = obj.get('educational_level');
		if (elprop != null){
			elval = elprop.getValue();

			if (elval.equals("preschool")){
				elnew = "prek";
				elchanged = true;
			} else
			if (elval.equals("earlyelementary")){
				elnew = "gr-k-2|gr-3-5";
				elchanged = true;
			} else
			if (elval.equals("upperelementary")){
				elnew = "gr-3-5|gr-6-8";
				elchanged = true;
			} else
			if (elval.equals("middleschool")){
				elnew = "gr-6-8|gr-9-10";
				elchanged = true;
			} else
			if (elval.equals("highschool")){
				elnew = "gr-9-10|gr-11-12";
				elchanged = true;
			} else
			if (elval.equals("highered")){
				elnew = "college_and_beyond";
				elchanged = true;
			} else
			if (elval.equals("prefessional")){
				elnew = "professional_development";
				elchanged = true;
			} else
			if (elval.equals("na")){
				elnew = "na";
				elchanged = true;
			} else {
				elnew = "na";
				elchanged = true;
			} 
		} else {
                        elnew = "na";
obj.set("educational_level", "na", context.context);
			elchanged = true; // Empty value
		}

		if (elchanged){
/*
			print("Changing EL " + doc.getFullName() + " from " + elval);
			el2prop = obj.get('educational_level2');
			println(" to " + elnew + " : old: " + el2prop.getValue());
			el2prop.setValue(elnew);
*/
// println("Changing EL " + doc.getFullName() + " to " + elnew);
obj.set("educational_level2", elnew, context.context);
			changed = true;
		}
	}

	for(obj in doc.getObjects("XWiki.AssetLicenseClass")){
		changed = false;

		licchanged = false;
		licnew = "";

		licprop = obj.get('licenseType');
		if (licprop != null){
			licval = licprop.getValue();

			if (licval.equals("Licences.CurrikiLicense")){
				licnew = licval; // CC BY
				licchanged = true;
			} else
			if (licval.equals("Licences.PublicDomain")){
				licnew = licval; // PD
				licchanged = true;
			} else
			if (licval.equals("Licences.CreativeCommonsAttributionNon-Commercial")){
				licnew = licval; // CC BY NC
				licchanged = true;
			} else
			if (licval.equals("Licences.CreativeCommonsAttributionNoDerivatives")){
				licnew = licval; // CC BY ND
				licchanged = true;
			} else
			if (licval.equals("Licences.CreativeCommonsAttributionNon-CommercialNoDerivatives")){
				licnew = licval; // CC BY NC ND
				licchanged = true;
			} else
			if (licval.equals("Licences.CreativeCommonsAttributionSharealike")){
				licnew = licval; // CC BY SA
				licchanged = true;
			} else
			if (licval.equals("Licences.CreativeCommonsAttributionNon-CommercialShareAlike")){
				licnew = licval; // CC BY NC SA
				licchanged = true;
			} else
			if (licval.equals("Licences.GnuDocumentationLicense")){
				// All were links -- going to CA BY
				licnew = "Licences.PublicDomain"; // ???? -- NEED TO LIST THESE
				licchanged = true;
			} else
			if (licval.equals("Licences.CreativeCommonsNon-Commercial")){
				// Upgrade to Attribution
				licnew = "Licences.CreativeCommonsAttributionNon-Commercial"; // ???
				licchanged = true;
			} else
			if (licval.equals("Licences.CreativeCommonsSharealike")){
				// Upgrade to Attribution
				licnew = "Licences.CreativeCommonsAttributionSharealike"; // ???
				licchanged = true;
			}
		} else {
				licnew = "Licences.CurrikiLicense"; // Default
				licchanged = true;
		}

		if (licchanged){
/*
			lic2prop = obj.get('licenseType2');
			println("Changed Licence " + doc.getFullName());
			lic2prop.setValue(licnew);
*/
// println("Changed Licence " + doc.getFullName());
obj.set("licenseType2", licnew, context.context);
			changed = true;
		}
	}

	if (changed || !changed) {
		doc.setMetaDataDirty(true);
doc.setContentDirty(false);
		xwiki.xWiki.saveDocument(doc, context.context);
println "Save "+doc.getFullName()+"&lt;br /&gt;";
	}

} catch (Exception e) {
 println "**************** ERROR ******************&lt;br /&gt;";
 println e.toString();
 println "&lt;br /&gt;";
 println "*********************************************&lt;br /&gt;";
 xwiki.flushCache();
}

}



} catch (Exception e) {
	println e.toString();

	xwiki.flushCache()
}
%&gt;</content>
</xwikidoc>
