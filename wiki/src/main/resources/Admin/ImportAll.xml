<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc>
<web>Admin</web>
<name>ImportAll</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent></parent>
<creator>XWiki.LudovicDubost</creator>
<author>XWiki.LudovicDubost</author>
<customClass></customClass>
<contentAuthor>XWiki.LudovicDubost</contentAuthor>
<creationDate>1179222897000</creationDate>
<date>1201262306000</date>
<contentUpdateDate>1203116887000</contentUpdateDate>
<version>1.6</version>
<title></title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/1.0</syntaxId>
<object>
<class>
<name>XWiki.TagClass</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<tags>
<cache>0</cache>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>tags</name>
<number>1</number>
<prettyName>Tags</prettyName>
<relationalStorage>1</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>30</size>
<unmodifiable>0</unmodifiable>
<values></values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</tags>
</class>
<name>Admin.ImportAll</name>
<number>0</number>
<className>XWiki.TagClass</className>
<property>
<tags/>
</property>
</object>
<content>1 Import All of the Curriki Wiki

This script allows to create an package.xml file from a directory of files ready for import.

&lt;%
import com.xpn.xwiki.*;
import com.xpn.xwiki.plugin.packaging.*;

def exportdir = "c:/dev/java/gelc/gelcv1/gelc/src/main/xwiki"

if (request.confirm=="1") {
def packagexml = "&lt;?xml version=\"1.0\" encoding=\"ISO-8859-1\"?&gt;\n&lt;package&gt;\n&lt;infos&gt;\n&lt;name&gt;curriki&lt;/name&gt;\n&lt;description&gt;&lt;/description&gt;\n&lt;licence&gt;LGPL&lt;/licence&gt;\n&lt;author&gt;XWiki&lt;/author&gt;\n&lt;version&gt;1.0.0&lt;/version&gt;\n&lt;backupPack&gt;false&lt;/backupPack&gt;\n&lt;/infos&gt;\n&lt;files&gt;\n";
def mydir = new File(exportdir)
for (space in mydir.list()) {
   def spaceDir = new File(exportdir, space )
   if (spaceDir.isDirectory()&amp;&amp;(space!=".svn")) {
    println "* ${space}"
    for (page in spaceDir.list()) {
      if (page!=".svn") {
      def pageName = page;
      def language = ""
      def index = page.lastIndexOf(".")
      if (index!=-1) {
       language = page.substring(index+1)
       pageName = page.substring(0,index)
      }
      fullPageName = xwiki.getXMLEncoded("${space}.${pageName}")
      packagexml += "&lt;file defaultAction=\"-1\" language=\"${language}\"&gt;${fullPageName}&lt;/file&gt;\n"
      }
    }
   }
}
packagexml += "&lt;/files&gt;\n&lt;/package&gt;\n"

File outFile = new File(exportdir, "package.xml")
FileOutputStream fos = new FileOutputStream(outFile);
fos.write(packagexml.getBytes("ISO-8859-1"));
fos.flush();
fos.close();

println "package.xml written on file system. [Confirm importing&gt;$doc.fullName?confirm=2]";
println "{code:xml}"
println packagexml
println "{code}"
}

if (request.confirm=="2") {
println "Starting import"
pack = new Package()
pack.setWithVersions(false)
pack.setBackupPack(true)
println "Reading documents"
pack.readFromDir(new File(exportdir), context.context)
println "Installing documents"
pack.install(context.context)
println "Finished."
} else {
 println "[Confirm creating package.xml&gt;$doc.fullName?confirm=1] [Confirm importing&gt;$doc.fullName?confirm=2]"
}
%&gt;</content>
</xwikidoc>
