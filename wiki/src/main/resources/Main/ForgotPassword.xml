<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc>
<web>Main</web>
<name>ForgotPassword</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent></parent>
<creator>XWiki.dward</creator>
<author>XWiki.dward</author>
<customClass></customClass>
<contentAuthor>XWiki.dward</contentAuthor>
<creationDate>1169062747000</creationDate>
<date>1206473031000</date>
<contentUpdateDate>1206473031000</contentUpdateDate>
<version>4.1</version>
<title>Forgot Password</title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment>Require an email address to continue</comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/1.0</syntaxId>
<object>
<class>
<name>XWiki.TagClass</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<tags>
<cache>0</cache>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>tags</name>
<number>1</number>
<prettyName>Tags</prettyName>
<relationalStorage>1</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>30</size>
<unmodifiable>0</unmodifiable>
<values></values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</tags>
</class>
<name>Main.ForgotPassword</name>
<number>0</number>
<className>XWiki.TagClass</className>
<property>
<tags/>
</property>
</object>
<content>#set($nl = $xwiki.getNl())
#set($uemail = $!request.get("q"))
#set($vkey = $!request.get("vk"))
#set($newpw = $!request.get("np"))
#set($newpwc = $!request.get("npc"))
#if(!$uemail) ## {
## Get email address to check for
1 $msg.get("forgotPassword.title")
$msg.get("forgotPassword.infos")

&lt;form id="enterPWForm" name="searchform" action="" method="post"&gt;
$msg.get("forgotPassword.enterEmail") &lt;input id="livesearch" name="q" value="" /&gt;
&lt;input type="submit" value="$msg.get('forgotPassword.Go')" /&gt;
&lt;/form&gt;
{pre}
&lt;script type="text/javascript"&gt;
/* &lt;![CDATA[ */
function checkEmail() {
	var isValid = true;

	var emailStr = $('livesearch').value;
	if (emailStr.length &lt;= 1) {
		alert("$msg.get("forgotPassword.email.mandatory")");
		isValid = false;
	} else {
		var atIndex = emailStr.indexOf("@");
		if ((atIndex &lt; 1) || (emailStr.lastIndexOf(".") &lt;= (atIndex+1)) || (emailStr.length &lt;= (emailStr.lastIndexOf(".") + 1)) || (emailStr.lastIndexOf("@") != atIndex)) {
		alert("$msg.get("forgotPassword.email.invalid")");
		isValid = false;
	}
   }


  return isValid;
}
Event.observe('enterPWForm', 'submit', function(event) {
  if (!checkEmail()) {
		event = event || window.event;
		if (typeof event.preventDefault != "undefined") {
			event.preventDefault();
		} else if (window.event){
			event.returnValue = false;
		}
  }
});
/* ]]&gt; */
&lt;/script&gt;
{/pre}
----
[$msg.get("forgotPassword.forgotUnameLink")&gt;Main.ForgotUsername]
#else ## !$uemail }{
## Got email address

## Get user
#set($sql= ", BaseObject as obj, StringProperty as prop where obj.name=doc.fullName and obj.className='XWiki.XWikiUsers' and prop.id.id = obj.id and prop.name='email' and (prop.value = '$!uemail')")
#set($list = $xwiki.searchDocuments($sql))
#if($list.size()==0) ## {
  $msg.get("forgotPassword.noUser", [$uemail])
#elseif($list.size()&gt;1) ## }{
$msg.get("forgotPassword.multipleUsers")
#elseif($list.size()==1) ## }{
#set($item = $list.get(0))
#set($bentrydoc = $xwiki.getDocument($item))

#if(!$vkey) ## {
## No $vkey, so send email
#set($from = $xwiki.getXWikiPreference("admin_email"))
#set($recipient = $bentrydoc.email)
#set($first_name = $bentrydoc.first_name)
#set($last_name = $bentrydoc.last_name)
#set($mesg = $xwiki.getDocument("Main.ForgotPasswordEmail").getContent())

#set($valkey = $xwiki.xWiki.generateRandomString(8))
#set($reseturl = ${xwiki.getRequestURL()})
#set($reseturl = "${reseturl}?q=${uemail}&amp;vk=${valkey}")

## Reseturl: $reseturl

#set($junk = $xwiki.sendMessage($from, $recipient, $xwiki.parseContent($mesg)))
#set($junk = $bentrydoc.set("validkey", $valkey))
#set($junk = $bentrydoc.saveWithProgrammingRights())
$msg.get("forgotPassword.emailSent", [$uemail])

#else ## !$vkey }{
## Have $vkey, so check and allow for password reset
#set($skey = ${bentrydoc.getObject("XWiki.XWikiUsers").getXWikiObject().getStringValue("validkey")})
#if($vkey != $skey) ## {
$msg.get("forgotPassword.invalidLink")
#else ## $vkey != $skey }{
#if($newpw &amp;&amp; ($newpw == $newpwc)) ## {
##set($newpw = $xwiki.xWiki.generateRandomString(8))
#set($junk = $bentrydoc.set("password", $newpw))
#set($junk = $bentrydoc.set("valkey", $newpw))
#set($junk = $bentrydoc.saveWithProgrammingRights())
$msg.get("forgotPassword.passwordChanged", [${bentrydoc.name}])

$msg.get("forgotPassword.youCanLogIn", ["/xwiki/bin/loginsubmit/XWiki/XWikiLogin"])

#else ## $newpw &amp;&amp; ($newpw == $newpwc) }{
#if ($newpw) ## {
$msg.get("forgotPassword.passwordsDoesNotMatch")&lt;br /&gt;

#end ## $newpw }
$msg.get("forgotPassword.enterPassword")

&lt;form name="changepwform" id="changepwform" method="post" action=""&gt;
&lt;label id="password_label" for="password"&gt;$msg.get("forgotPassword.enterPassword.prompt") &lt;/label&gt;&lt;input type="password" id="password" name="np" value="" /&gt;&lt;br /&gt;
&lt;label id="confirmpassword_label" for="confirmpassword"&gt;$msg.get("forgotPassword.enterPasswordConfirm.prompt")&lt;/label&gt; &lt;input type="password" id="confirmpassword" name="npc" value="" /&gt;&lt;br /&gt;
&lt;input type="submit" value="$msg.get('forgotPassword.Go')" /&gt;
&lt;/form&gt;
{pre}
&lt;script type="text/javascript"&gt;
/* &lt;![CDATA[ */
function checkPassword() {
	var isValid = true;
	if($('password').value.indexOf(" ") &gt;= 0){
		alert("$msg.get("profile.field.password.nospaces")");
		isValid = false;
	}
	if ($('password').value.length &lt; 5) {
		alert("$msg.get("profile.field.password.tooShort")");
		isValid = false;
	}
	if ($('confirmpassword').value != $('password').value){
		alert("$msg.get("profile.field.password.mustMatch")");
		isValid = false;
	}

  return isValid;
}
Event.observe('changepwform', 'submit', function(event) {
  if (!checkPassword()) {
		event = event || window.event;
		if (typeof event.preventDefault != "undefined") {
			event.preventDefault();
		} else if (window.event){
			event.returnValue = false;
		}
  }
});
/* ]]&gt; */
&lt;/script&gt;
{/pre}
#end ## else $newpw &amp;&amp; ($newpw == $newpwc) }
#end ## else $vkey != $skey }
#end ## else !$vkey }

#end ## $list.size()==1 }

#end ## else !$uemail }</content>
</xwikidoc>
