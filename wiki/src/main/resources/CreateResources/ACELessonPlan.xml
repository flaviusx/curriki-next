<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc>
<web>CreateResources</web>
<name>ACELessonPlan</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent></parent>
<creator>XWiki.panjl</creator>
<author>XWiki.panjl</author>
<customClass></customClass>
<contentAuthor>XWiki.panjl</contentAuthor>
<creationDate>1222442464000</creationDate>
<date>1237208986000</date>
<contentUpdateDate>1237208986000</contentUpdateDate>
<version>76.1</version>
<title></title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment>attach scrol</comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/1.0</syntaxId>
<hidden>false</hidden>
<attachment>
<filename>exclamation.png</filename>
<filesize>1381</filesize>
<author>XWiki.panjl</author>
<date>1222443352000</date>
<version>1.1</version>
<comment></comment>
<content>iVBORw0KGgoAAAANSUhEUgAAABYAAAAUCAYAAACJfM0wAAAABGdBTUEAAK/INwWK6QAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAT3SURBVHjabFXdb1RFHP3N/drvux9l24YuLVRsgVAQiBIRoxjfFEMQxGiMPvAH+Ef4TPTFN2OIUR9MhCgEiS8QCCSNRARECkjp2mW7bWl37+79mPsx1zN3oWribO7eu3dmzpw558xvWRzH5Pk8wyjGh0VE8sZS+LbThhF3HUfxvICqlaJ41GozVYlpqFqOMYfJltINgTnE8Rs3BZdIGalYky993+dmvpAMaFtWKgwj27b5pCfYIctyeHOpe6LnkB/4fkPXI14bLp0o5/VvCxljrGBm62lDd3L5QtSzLT0WjAOYmGT8tIVRqIZRZP5646+Ts0vWwVjJkJrSSFEZaYZCfiTI6XLy3ICcThs0XZp6ZvDogVd2nDI0PcJ8HTCapmpuwjgUkdwGBUFo/H5/ecPMgndQy+Ypk1YBqlAa4LWKTpYT0KqhURAKcis5Wl1u08/TjbdLZuaXPXsm65BQsszhcqUmpClq7Hs+Xb72cP+lm82zQgOgHMIYCaieAvjGaomq+Yw0gESsUEpRKF80KTNQevfk91e+OnvmYs3nfoTOx/REbLLtntJodfK3Hqx+qaf0WoT+ANsWAa4wgjEhtdsW9Xo2BXgWWM3DmBD9o8Nl0qpj+3+8/PDz2dn5AkxU14CBkbN6/DgnNgKhKIoiGBqSjy2DILnQ9PZ8h+ZXXDgoIFks9SM51odHo8MlyhXLbzQWuhsUVe2rkCSh6/Pp6/MnXC+JHBRgpCcrxrRzokg6fkdMJcv26G6jSz4PKeRRAhyBgGx6pkA/XVv8QNe1Tw+8vGMhQV9cbL8/t+gAJwZLMA1CsBLEARD4DkEQ2jhUoMFiGsbJ3UAK3F2M5dgdx101DOJCvfP1uT+6a1IsrnSMtiMQNwHtcPEACwQJwwvXF+m3e8trkZSL+rLfDwh5xwIh5vTJMN9+a2xQi9ek8G1vBPQQSw0hVMgVGiQMsKqfrF1Mi37OBY6jzcl2AQSmAipIAwM8O3inhJGrsvAfjUvFTFtnnt/jWSMjAIIZEaKt6BrFUUA2GCYNXVJfzwOwzKEcCiMjLBh4XB6YW7WhAW9NitpI5bPxEXPO55ABA50A+kHHBITLWMWIZ5wgy2cXwAGHH14/djI9XrdNW6eedVuiQmvAZjGX2jRe+cIQHsgK6IXJPoCwxU3rS1Rbl5NZIcNQaWzYpFxaSwx04EcAtq0li1qNP8/ByFNcHoCnUjCFhYNm6hs99nZ1uX5Mhc7yKOt5lQ6/uplSAETiqGxm6bXnR8lA3/npBgXYRQhvbl27SmOFlR9en1TrE1smk/KQFCGULYZTxc6fv2Seu3z3/mMaHsiZZUrhaKcBmnBQ+hrL+Musyzg+ajao8eAGbSmtnn7v2JvHjxw98jgMQ0XTNJEwNnQjrpSN+KV9uzppjR0+c+HmxZUViyKzBsd11BLWN4/1kyEjtlyfo079Ck3V0qc/+vCdT57btbvTFzcpRH3GKHcMpS550VpoqVevTk/cnmkdqXf0Qwur7m4XlONYhYEwz+uhVng0ZPg0sUH7+MUX9ny3d9/eZnVdNX5Sek1gWf+px0/b0tJSrtlsGg9m6+6dmbmBxkJrpNvz0hjbzmc0a3T9OrF925ZN45vHL23dtlX8e67jOko2kxUJsO3YrL9RFNNsLhlod3tqrpCXf1V0b+YeczxHehZvn9rp0/80YChPHlPAcP8WYADnK/w3MFxCuwAAAABJRU5ErkJggg==</content>
</attachment>
<attachment>
<filename>CIAACEsmall.JPG</filename>
<filesize>2662</filesize>
<author>XWiki.jkl1231</author>
<date>1222779534000</date>
<version>1.1</version>
<comment></comment>
<content>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</content>
</attachment>
<attachment>
<filename>ACElogo.png</filename>
<filesize>5277</filesize>
<author>XWiki.panjl</author>
<date>1223475186000</date>
<version>1.1</version>
<comment></comment>
<content>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</content>
</attachment>
<object>
<class>
<name>XWiki.TagClass</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<tags>
<cache>0</cache>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>tags</name>
<number>1</number>
<prettyName>Tags</prettyName>
<relationalStorage>1</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>30</size>
<unmodifiable>0</unmodifiable>
<values></values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</tags>
</class>
<name>CreateResources.ACELessonPlan</name>
<number>0</number>
<className>XWiki.TagClass</className>
<guid>6edf9755-8ecf-4cef-9790-db1794a46c02</guid>
<property>
<tags/>
</property>
</object>
<content>
####################################	If not login, show login information
#if( $context.user=="XWiki.XWikiGuest" )
  #set( $logredir = $xwiki.getRequestURL() )
  #set( $url = $xwiki.getURL("XWiki.XWikiLogin","login","xredirect=$logredir") )
  $msg.get("createresources.needaccount", [$url])
#else
####################################	If logined, show ACELessonPlan page
  #includeMacros("CreateResources.StyledMacros")
  #set( $pageName   = $request.getParameter("pageName") )
  #set( $cameFrom   = $request.getParameter("cameFrom") )
  #set( $flow       = $request.getParameter("flow") )
  #set( $parentPage = $request.getParameter("parentPage") )
  #set( $publishSpace = $request.getParameter("publishSpace") )
  #if( "$!pageName" != "" ) 
	 #set( $newAsset  = $xwiki.curriki.fetchAsset($pageName) )
  #else
	 #set( $newAsset = $xwiki.curriki.createAsset($xwiki.null) )
  #end 

####################################	If newAsset is null, show error message
  #if( "$!newAsset"=="" ) 
	#if( "$!pageName" != "" )&lt;p&gt;asset creation error:&lt;/p&gt;#else&lt;p&gt;asset lookup error:&lt;/p&gt;#end
	&lt;dl&gt;
	  &lt;dt&gt;request.method&lt;/dt&gt;&lt;dd&gt;$!request.method&lt;/dd&gt;
	  &lt;dt&gt;request.page&lt;/dt&gt;&lt;dd&gt;$!request.page&lt;/dd&gt;
	  &lt;dt&gt;getParameter("pageName")&lt;/dt&gt;&lt;dd&gt;$!pageName&lt;/dd&gt;
	  &lt;dt&gt;getParameter("cameFrom")&lt;/dt&gt;&lt;dd&gt;$!cameFrom&lt;/dd&gt;
	  &lt;dt&gt;getParameter("flow")&lt;/dt&gt;&lt;dd&gt;$!flow&lt;/dd&gt;
	  &lt;dt&gt;getParameter("parentPage")&lt;/dt&gt;&lt;dd&gt;$!parentPage&lt;/dd&gt;
	  &lt;dt&gt;getParameter("publishSpace")&lt;/dt&gt;&lt;dd&gt;$!publishSpace&lt;/dd&gt;
	&lt;/dl&gt;
  #else
####################################	else ,show page
{pre}
&lt;script language="javascript" type="text/javascript"&gt;

function checkStandardLessonPlanForm() {
  var missed_fields_str = '';
  if (getFieldContentStr('CurrikiCode.AssetClass_0_title') == null) {
	missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('lesson.plan.required.fields.dialog.title')');
  }
  if (getFieldContentStr('CurrikiCode.AssetClass_0_description') == null) {
	missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('lesson.plan.required.fields.dialog.description')');
  }
  {
	var form_fw_items = getFieldContentStr('CurrikiCode.AssetClass_0_fw_items');
	if ((form_fw_items == null) || (form_fw_items == 'FW_masterFramework.WebHome')) {
	  missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('lesson.plan.required.fields.dialog.subject')');
	}
  }
  { // Eductional-Level -- for validation, must look at "checked" on each button.
	var one_checked = false;
	for (var idx = 0, form_checkboxes = document.forms.inline['CurrikiCode.AssetClass_0_educational_level'];
	 ((idx &lt; form_checkboxes.length) &amp;&amp; !one_checked);
	 idx++) {
	  if (form_checkboxes[idx].checked) {
	one_checked = true;
	  }
	}
	if (!one_checked) {
	  missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('lesson.plan.required.fields.dialog.level')');
	} 
  }

  if (getFieldContentStr('slp_number_days') == null) {
	missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('lesson.plan.required.fields.dialog.numberdays')');
  }
  if (getFieldContentStr('slp_prior_knowledge') == null) {
	missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('lesson.plan.required.fields.dialog.priorknowledge')');
  }
  if (getFieldContentStr('slp_lesson_objective') == null) {
	missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('lesson.plan.required.fields.dialog.lessonobjective')');
  }
  if (getFieldContentStr('slp_lesson_assessment') == null) {
	missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('lesson.plan.required.fields.dialog.lessonassessment')');
  }

if(!chekcTableText()){
	missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('lesson.plan.required.fields.dialog.procedures')');
}

  if (getFieldContentStr('CurrikiCode.AssetLicenseClass_0_rightsHolder') == null) {
	missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('lesson.plan.required.fields.dialog.rights')');
  }
  if (getAttachmentsSize() &gt; $msg.get("lesson.plan.file.size.maximum")) {
	missed_fields_str = missed_fields_str + '\n\n' + '$msg.get('lesson.plan.file.size.oversize')';
  }
  var error_msg = "";
  if(missed_fields_str != ''){
	error_msg = '$msg.get('lesson.plan.required.fields.dialog')' + missed_fields_str;
  }else{
	if (getFieldContentStr('CurrikiCode.AssetClass_0_title').length &gt; 250) {
	  error_msg = '$msg.get("ace.lesson.plan.title.more.250")';
	}
  }

  if (error_msg != '') { // since theres error messages, validation failed... bail out.
	alert(error_msg);
	setTextAssetToWikiText('$msg.get('form.done.wysiwyg.error.wikitext')');  // not POSTing due to 'false' return below, so this should not matter -- reset in case of going "back" in browser after successful POST??
	setSuccessMessage('');     //not POSTing due to 'false' return below, so this should not matter -- reset in case of going "back" in browser after successful POST??
	return false;
  }
  else { 
  
	setTextAssetToWikiText(formatTextareasIntoWikiText());
	setSuccessMessage('$msg.get('form.done.created.lessonplan')');
	return true;
  }
}

function checkStandardLessonPlanDirty() {
  if (getAttachmentsSize() &gt; 0) {
	return true;
  }
  if (getFieldContentStr('CurrikiCode.AssetClass_0_title') != null) {
	return true;
  }
  if (getFieldContentStr('CurrikiCode.AssetClass_0_description') != null) {
	return true;
  }
  if (getFieldContentStr('slp_number_days') != null) {
	return true;
  }
  if (getFieldContentStr('slp_prior_knowledge') != null) {
	return true;
  }
  if (getFieldContentStr('slp_lesson_objective') != null) {
	return true;
  }
  if (getFieldContentStr('slp_lesson_assessment') != null) {
	return true;
  }

  return false;
}

function formatTextareasIntoWikiText() { 			
  var slp_str = '';		// the string we concat into the TextAssetClass contents
  var title_markup_str = '*';
  var vert_break_str = '\\\\\n\n'

  slp_str = title_markup_str + '$msg.get("ace.lesson.plan.output.heading.content")' + title_markup_str +  vert_break_str + '#' + 'currikiACELPIcon()';

  {
	var form_number_days = getFieldContentStr('slp_number_days');
	if (form_number_days != null) {
	  form_number_days = form_number_days.replace(/\r\n/g,'\\\\').replace(/\n/g,'\\\\');
	  slp_str = ((slp_str != '') ? (slp_str + vert_break_str) : '') + title_markup_str + '$msg.get("ace.lesson.plan.number.days.title")' + title_markup_str +  vert_break_str + form_number_days;
	}
  } 

  {
	var form_prior_knowledge = getFieldContentStr('slp_prior_knowledge');
	if (form_prior_knowledge != null) {
	  form_prior_knowledge = form_prior_knowledge.replace(/\r\n/g,'\\\\').replace(/\n/g,'\\\\');
	  slp_str = ((slp_str != '') ? (slp_str + vert_break_str) : '') + title_markup_str + '$msg.get("ace.lesson.plan.prior.knowledge.title")' + title_markup_str +  vert_break_str + form_prior_knowledge;
	}
  } 
  {
	var form_lesson_objective = getFieldContentStr('slp_lesson_objective');
	if (form_lesson_objective != null) {
	  form_lesson_objective = form_lesson_objective.replace(/\r\n/g,'\\\\').replace(/\n/g,'\\\\');
	  slp_str = ((slp_str != '') ? (slp_str + vert_break_str) : '') + title_markup_str + '$msg.get("ace.lesson.plan.lesson.objective.title")' + title_markup_str +  vert_break_str + form_lesson_objective;
	}
  } 
  {
	var form_lesson_assessment = getFieldContentStr('slp_lesson_assessment');
	if (form_lesson_assessment != null) {
	  form_lesson_assessment = form_lesson_assessment.replace(/\r\n/g,'\\\\').replace(/\n/g,'\\\\');
	  slp_str = ((slp_str != '') ? (slp_str + vert_break_str) : '') + title_markup_str + '$msg.get("ace.lesson.plan.lesson.assessment.title")' + title_markup_str +  vert_break_str + form_lesson_assessment;
	}
  } 
  {
	var form_benchmark_standards = getFieldContentStr('slp_benchmark_standards');
	if (form_benchmark_standards != null) {
	  form_benchmark_standards = form_benchmark_standards.replace(/\r\n/g,'\\\\').replace(/\n/g,'\\\\');
	  slp_str = ((slp_str != '') ? (slp_str + vert_break_str) : '') + title_markup_str + '$msg.get("ace.lesson.plan.benchmark.standards.title")' + title_markup_str +  vert_break_str + form_benchmark_standards;

	}
  } 
  {
	var form_materials_needed = getFieldContentStr('slp_materials_needed');
	if (form_materials_needed != null) {
	  form_materials_needed = form_materials_needed.replace(/\r\n/g,'\\\\').replace(/\n/g,'\\\\');
	  slp_str = ((slp_str != '') ? (slp_str + vert_break_str) : '') + title_markup_str + '$msg.get("ace.lesson.plan.materials.needed.title")' + title_markup_str +  vert_break_str + form_materials_needed;
	}
  } 
  {
	var form_enrichment = getFieldContentStr('slp_enrichment');
	if (form_enrichment != null) {
	  form_enrichment = form_enrichment.replace(/\r\n/g,'\\\\').replace(/\n/g,'\\\\');
	  slp_str = ((slp_str != '') ? (slp_str + vert_break_str) : '') + title_markup_str + '$msg.get("ace.lesson.plan.enrichment.title")' + title_markup_str +  vert_break_str + form_enrichment;
	}
  } 
  {
	var form_accommodations = getFieldContentStr('slp_accommodations');
	if (form_accommodations != null) {
	  form_accommodations = form_accommodations.replace(/\r\n/g,'\\\\').replace(/\n/g,'\\\\');
	  slp_str = ((slp_str != '') ? (slp_str + vert_break_str) : '') + title_markup_str + '$msg.get("ace.lesson.plan.accommodations.title")' + title_markup_str +  vert_break_str + form_accommodations;
	}
  } 
  {
	var form_anticipated_problems = getFieldContentStr('slp_anticipated_problems');
	if (form_anticipated_problems != null) {
	  form_anticipated_problems = form_anticipated_problems.replace(/\r\n/g,'\\\\').replace(/\n/g,'\\\\');
	  slp_str = ((slp_str != '') ? (slp_str + vert_break_str) : '') + title_markup_str + '$msg.get("ace.lesson.plan.anticipated.problems.title")' + title_markup_str +  vert_break_str + form_anticipated_problems;
	}
  } 

  {	//js table
	var form_table_text = getTableText();
	if (form_table_text != null) {
	  slp_str = ((slp_str != '') ? (slp_str + vert_break_str) : '') + title_markup_str + '$msg.get("ace.lesson.plan.procedures.title")' + title_markup_str +  vert_break_str + form_table_text
	}
  } 

  {
	var file_list = getAttachmentsNames();
	if (file_list.length &gt; 0) {
	  slp_str = ((slp_str != '') ? (slp_str + vert_break_str) : '') + title_markup_str + '$msg.get("ace.lesson.plan.attachments.title")' + title_markup_str + vert_break_str + '#' + 'currikiattachmentBegin()\n';
	  for (var idx = 0; (idx &lt; file_list.length); idx++) {
	// for macro currikiattachment($fname) see web/src/main/webapp/skins/curriki8/macros.vm
	slp_str = slp_str + '#' + 'currikiattachment("' + file_list[idx] + '")\n';
	  }
	  slp_str = slp_str + '#' + 'currikiattachmentEnd()\n' + vert_break_str;
	}
  }

  {
	slp_str = ((slp_str != '') ? (slp_str + vert_break_str) : '') + title_markup_str + '$msg.get("ace.lesson.plan.changes_heading")' + title_markup_str +  vert_break_str + '$msg.get("ace.lesson.plan.changes_content")';
	slp_str = ((slp_str != '') ? (slp_str + vert_break_str) : '') + title_markup_str + '$msg.get("ace.lesson.plan.whatworked_heading")' + title_markup_str +  vert_break_str + '$msg.get("ace.lesson.plan.whatworked_content")';
  }

  return (slp_str);
}

function setTextAssetToWikiText(str) {
  var input_field_TextAssetClass_o = $('CurrikiCode.TextAssetClass_0_text');
  if (input_field_TextAssetClass_o != null) {
	input_field_TextAssetClass_o.value = str;
  }
  else { alert('error in setTextAssetToWikiText()'); }
}

function getFieldContentStr(field_id_str) {
  var field_content_o   = $(field_id_str);
  var field_content_str = (field_content_o==null) ? "" : field_content_o.value;
  if ((field_content_str.length &lt; 1) || (field_content_str.trim() == '')) {
	return (null);
  }
  else {
	return (field_content_str);
  }
}

function setSuccessMessage(str) {
  var input_field_successMessage_o = $('successMessage');
  if (input_field_successMessage_o != null) {
	input_field_successMessage_o.value = str;
  }
  else { alert('error in setSuccessMessage()'); }
}

function appendSeparatedErrorMessageStr(message_str, missed_field_err_str) {
  return(message_str + '\n\t\t' + missed_field_err_str);
}

var needUnloadDialog = false;
function clearUnloadDialog() {
  needUnloadDialog = false;
}

function onWindowUnloading(e) {
  // if the form is not "dirty" don't pop form.leaving.dialog
  if (needUnloadDialog &amp;&amp; checkStandardLessonPlanDirty()) {
	e.browserEvent.returnValue = "$msg.get('form.leaving.dialog')";
  }
}

function setUnloadDialog() {
  // window.onbeforeunload = unloadDialog;
  Ext.EventManager.on(window, 'beforeunload', onWindowUnloading); 
  needUnloadDialog = true;
}

function getAttachmentsSize() {
  return (window.frames['attachment_iframe'].getAttachmentsSize());
}

function getAttachmentsNames() {
  return (window.frames['attachment_iframe'].getAttachmentsNames());
}

function setAttachmentsIframeSize() {
  var iframe_o = document.getElementById('attachment_iframe');
  try {
	if (iframe_o != null &amp;&amp; !Ext.isIE6) {
	  iframe_o.height = iframe_o.style.height = 50;  // attempt reset because FF behavior is grow-only
	}
	// this is portable way of getting at iframe DOM content per
	// http://www.mabaloo.com/Web-Development/Creating-controlling-and-manipulating-an-Iframe-through-JavaScript.html
	var doc_o = (iframe_o.contentWindow || iframe_o.contentDocument);  
	if (doc_o.document) {
	  doc_o = doc_o.document;
	}
	// the iframe needs more space than 'scrollHeight' says, or we get
	// scrollbars. 5 seems to accomodate the inner and outer margin, and
	// inner and outer border, with one pixel for the margin itself.
	// nb: iframe_o.style.height only works in IE, does nothing in FF.
	// do em both for good measure?!
	if (iframe_o != null) {
	   if (Ext.isIE6) {
         iframe_o.height = doc_o.body.scrollHeight + 30;
	   } else {
	     iframe_o.height = iframe_o.style.height = doc_o.body.scrollHeight + 5;
	   }
	}
  } catch(e) {
	if (iframe_o != null) {
	  iframe_o.height = iframe_o.style.height = 300; // bigger default height value if things go wrong
	}
  } 
}
&lt;/script&gt;

&lt;style type="text/css"&gt;
.x-grid3-td-0{border-right: 1px solid lightgrey; padding-left: 0px !important;padding-right: 0px !important}
.x-grid3-td-1{border-right: 1px solid lightgrey; padding-left: 0px !important;padding-right: 0px !important}
.x-grid3-td-2{padding-left: 0px !important;padding-right: 0px !important}
.x-grid3-col-0{white-space: normal; word-wrap:break-word;}
.x-grid3-col-1{white-space: normal; word-wrap:break-word;}
.x-grid3-col-2{white-space: normal; word-wrap:break-word;}
.x-form-field-ace{overflow:hidden}

/* Curriki-form */
.curriki-form1 .headerbar { background-color: #93c53c; }
.curriki-form1 .headerbar { padding-left: 0.95em; }
.curriki-form1 em { font-style:normal; color: #fb0f0c; }
.curriki-form1 .header p { padding: 0 0 1em; }
.curriki-form1 .header p img { margin-bottom: -8px; height: 25px; width: 25px; }
.curriki-form1 .frame{ margin-bottom: 2em; }
.curriki-form1 .frame-content { padding: 0.5em 1em 1.5em; }
.curriki-form1 h3 { padding-top: 1em; }
.curriki-form1 .medium { width: 75%; }
.curriki-form1 .small { font-size: 100%; width: 50%; }
.curriki-form1 .entry { padding: 2em 0 0; }
.curriki-form1 .entry h5 { font-size: 1.1em; }
.curriki-form1 .entry h5 em { font-weight: normal; }
.curriki-form1 .entry h5 img { margin-bottom: -5px; }
.curriki-form1 .entry p.instruction { line-height: 130%; padding-bottom: 7px; }
.curriki-form1 .entry input.input { width: 90%; }
.curriki-form1 .entry textarea { height: 9em; width: 90%; }

.curriki-form1 .entry label { display: block; }
.curriki-form1 table.subject-educational { font-size: 1em; width: 95%; }
.curriki-form1 table.subject-educational td { width: 50%; padding-right: 1em; }
.curriki-form1 table.subject-educational td td { width: auto; }
.curriki-form1 .links { padding-bottom: 0; text-align: center; }
.curriki-form1 .links button { display: inline; margin-right: 1.5em; }
.curriki-form1 table.subject-educational th { background-color: transparent; }
.curriki-form1 table.subject-educational td { vertical-align: top; }
.curriki-form1 span.xwiki-form-listclass { display: block; margin: 3px 0 !important; margin: 0 0 2px; }
.curriki-form1 #XWiki\.AssetClass_0_title { width: 99% !important; width: 95%; }
.curriki-form1 textarea { height: 120px; }
.curriki-form1 textarea { padding: 1px 0; }
.curriki-form1 .mceEditorIframe { height: 18em !important; width: 100%  !important; }
.curriki-form1 .subject-educational .xwiki-form-listclass { padding-bottom: 1px !important; padding-bottom: 0; }
.curriki-form1 .subject-educational .ygtvlabel { display: block; padding-top: 4px; }
.curriki-form1 #attachment_iframe { padding: 10px; width: 100%; }

.curriki-form1_textarea { width: 99.5% !important; width: 95%; }
input {	width:expression(this.type=="text" ? "83%" : "style"); }
&lt;/style&gt;
&lt;script type="text/javascript" src="/xwiki/yui/yahoo/yahoo-min.js" &gt;&lt;/script&gt;
&lt;script type="text/javascript" src="/xwiki/yui/treeview/treeview-min.js" &gt;&lt;/script&gt;
&lt;script type="text/javascript" src="/xwiki/yui/treeview/checknode.js"&gt;&lt;/script&gt;
&lt;script&gt; 
// ----------------------------------- override YUI checknode method -------------------
/**
 * jsj add
 *Invoked when the user press space key
 */
YAHOO.widget.CheckNode.prototype.getKeyCheck = function() {
    return " if( 32 == (window.event ? event.keyCode : event.which) ){ "+"YAHOO.widget.TreeView.getNode(\'" + this.tree.id + "\'," +
        this.index + ").checkClick();"+"if (event.preventDefault) event.preventDefault( ); else event.returnValue = false;}";
};

// Overrides YAHOO.widget.TextNode
YAHOO.widget.CheckNode.prototype.getNodeHtml = function() {
    // this.logger.log("Generating html");
    var sb = new Array();

    sb[sb.length] = '&lt;table border="0" cellpadding="0" cellspacing="0"&gt;';
    sb[sb.length] = '&lt;tr&gt;';

    for (i=0;i&lt;this.depth;++i) {
        sb[sb.length] = '&lt;td class="' + this.getDepthStyle(i) + '"&gt;&amp;#160;&lt;/td&gt;';
    }

    sb[sb.length] = '&lt;td';
    sb[sb.length] = ' id="' + this.getToggleElId() + '"';
    sb[sb.length] = ' class="' + this.getStyle() + '"';
    if (this.hasChildren(true)) {
        sb[sb.length] = ' onmouseover="this.className=';
        sb[sb.length] = 'YAHOO.widget.TreeView.getNode(\'';
        sb[sb.length] = this.tree.id + '\',' + this.index +  ').getHoverStyle()"';
        sb[sb.length] = ' onmouseout="this.className=';
        sb[sb.length] = 'YAHOO.widget.TreeView.getNode(\'';
        sb[sb.length] = this.tree.id + '\',' + this.index +  ').getStyle()"';
    }
    sb[sb.length] = ' onclick="javascript:' + this.getToggleLink() + '"&gt;&amp;#160;';
    sb[sb.length] = '&lt;/td&gt;';

    // check box
    sb[sb.length] = '&lt;td';
    sb[sb.length] = ' id="' + this.getCheckElId() + '"';
    sb[sb.length] = ' class="' + this.getCheckStyle() + '"';
    sb[sb.length] = ' onclick="javascript:' + this.getCheckLink() + '"&gt;';
    sb[sb.length] = '&amp;#160;&lt;/td&gt;';


    sb[sb.length] = '&lt;td&gt;';
    sb[sb.length] = '&lt;a';
    sb[sb.length] = ' id="' + this.labelElId + '"';
    sb[sb.length] = ' class="' + this.labelStyle + '"';
    sb[sb.length] = ' href="' + this.href + '"';
    sb[sb.length] = ' target="' + this.target + '"';
    if (this.hasChildren(true)) {
        sb[sb.length] = ' onmouseover="document.getElementById(\'';
        sb[sb.length] = this.getToggleElId() + '\').className=';
        sb[sb.length] = 'YAHOO.widget.TreeView.getNode(\'';
        sb[sb.length] = this.tree.id + '\',' + this.index +  ').getHoverStyle()"';
        sb[sb.length] = ' onmouseout="document.getElementById(\'';
        sb[sb.length] = this.getToggleElId() + '\').className=';
        sb[sb.length] = 'YAHOO.widget.TreeView.getNode(\'';
        sb[sb.length] = this.tree.id + '\',' + this.index +  ').getStyle()"';
    }
    sb[sb.length] = ' onkeypress="javascript:' + this.getKeyCheck(this.event)+'"&gt;';
    //sb[sb.length] = '&gt;';
    sb[sb.length] = this.label;
    sb[sb.length] = '&lt;/a&gt;';
    sb[sb.length] = '&lt;/td&gt;';
    sb[sb.length] = '&lt;/tr&gt;';
    sb[sb.length] = '&lt;/table&gt;';

    return sb.join("");
};

var grid;                      // table
var isJumpToNext, isJumpToPre; // jump flag for table
var clickTabToNextNum=0, clickTabToPreNum=0, clickTabInGridToNextNum=0, clickTabInGridToPreNum=0; 
// ------------------------------------ extend extjs ------------------------------------
Ext.apply(Ext.grid.GridView.prototype,{
	// remove red triangles
	doRender : function(cs, rs, ds, startRow, colCount, stripe){
		var ts = this.templates, ct = ts.cell, rt = ts.row, last = colCount-1;
		var tstyle = 'width:'+this.getTotalWidth()+';';
		var buf = [], cb, c, p = {}, rp = {tstyle: tstyle}, r;


		for(var j = 0, len = rs.length; j &lt; len; j++){
			r = rs[j]; cb = [];
			var rowIndex = (j+startRow);
			for(var i = 0; i &lt; colCount; i++){
				c = cs[i];
				p.id = c.id;
				p.css = i == 0 ? 'x-grid3-cell-first ' : (i == last ? 'x-grid3-cell-last ' : '');
				p.attr = p.cellAttr = "";
				p.value = c.renderer(r.data[c.name], p, r, rowIndex, i, ds);
				p.style = c.style;
				if(p.value == undefined || p.value === "") p.value = "&amp;#160;";
				cb[cb.length] = ct.apply(p);
			}
			var alt = [];
			if(stripe &amp;&amp; ((rowIndex+1) % 2 == 0)){
				alt[0] = "x-grid3-row-alt";
			}
			if(r.dirty){
				alt[1] = " x-grid3-dirty-row";
			}
			rp.cols = colCount;
			if(this.getRowClass){
				alt[2] = this.getRowClass(r, rowIndex, rp, ds);
			}
			rp.alt = alt.join(" ");
			rp.cells = cb.join("");
			buf[buf.length] =  rt.apply(rp);
		}
		return buf.join("");
	},
	
	focusCell : function(row, col, hscroll){
		row = Math.min(row, Math.max(0, this.getRows().length-1));
		var xy = this.ensureVisible(row, col, hscroll);
		this.focusEl.setXY(xy||this.scroller.getXY());
		
		if(Ext.isGecko){
		   // this.focusEl.focus();
		}else{
		   // this.focusEl.focus.defer(1, this.focusEl);
		}
	},

	// private
	layout : function(){
		if(!this.mainBody){
			return; // not rendered
		}
		var g = this.grid;
		var c = g.getGridEl();
		var csize = c.getSize(true);
		var vw = csize.width;

		if(vw &lt; 20 || csize.height &lt; 20){ // display: none?
			return;
		}

		if(g.autoHeight){
			this.scroller.dom.style.overflow = 'hidden';
		}else{
			this.el.setSize(csize.width, csize.height);

			var hdHeight = this.mainHd.getHeight();
			var vh = csize.height - (hdHeight);

			this.scroller.setSize(vw, vh);
			if(this.innerHd){
				this.innerHd.style.width = (vw)+'px';
			}
		}
		if(this.forceFit){
			if(this.lastViewWidth != vw){
				this.fitColumns(false, false);

				this.lastViewWidth = vw;
			}
		}else {
			this.autoExpand();
			this.syncHeaderScroll();
		}
		this.onLayout(vw, vh);
	}
});
Ext.apply(Ext.grid.EditorGridPanel.prototype,{
	// multi-lines wrapper and clear default value
	preEditValue : function(r, field){
		var value = r.data[field];
		if(!r.dirty||(r.dirty &amp;&amp; typeof r.modified[field] == 'undefined')){
			value='';
		}else if(typeof value == 'string'){
			value=value.replace(/&lt;br\/&gt;/gi,'\r\n');
			value=this.autoEncode ? Ext.util.Format.htmlDecode(value) : value;
		}
		return value;
	},
	postEditValue : function(value, originalValue, r, field){
		if(typeof value == 'string'){
			value=this.autoEncode ? Ext.util.Format.htmlEncode(value) : value;
			value=value.replace(/\r\n/gi,"&lt;br/&gt;").replace(/\n/gi,'&lt;br/&gt;');
		}
		delete Ext.currentCellNode;
		return value;
	}
});
Ext.apply(Ext.grid.GridEditor.prototype, {
	// set auto size
	autoSize: true,
	doAutoSize : function(){
		if(this.autoSize){
			var parentNode=this.boundEl.dom.parentNode;
			var width=parentNode.clientWidth;
			var height=parentNode.clientHeight;
			switch(this.autoSize){
				case "width":
					this.setSize(width,  "");
				break;
				case "height":
					this.setSize("",  height-1);
				break;
				default:
					this.setSize(width,  height-1);
			}
			Ext.currentCellNode=parentNode;
		}
	}
});
Ext.apply(Ext.form.TextArea.prototype, {
	// auto size cell
	onKeyUpBuffered : function(e){
		if(!e.isNavKeyPress()||e.getKey()==e.ENTER){
			this.autoSize();
		} else if (e.isNavKeyPress()) {		
			if (isJumpToNext) {
				clickTabToNextNum = clickTabToNextNum + 1;
				if (clickTabToNextNum == 2) {
					isJumpToNext = false;
					clickTabToNextNum = 0;
					document.getElementById("addRowBtn").focus();
				}
			} else if (isJumpToPre) {
				clickTabToPreNum = clickTabToPreNum + 1;
				if (clickTabToPreNum == 2) {
					isJumpToPre = false;

					clickTabToPreNum = 0;
					document.getElementById("slp_anticipated_problems").focus();
				}
			}
		} 
	},
	autoSize : function(){
		if(!this.grow || !this.textSizeEl){
			return;
		}
		var el = this.el;
		var v = el.dom.value;
		var ts = this.textSizeEl;
		ts.innerHTML = '';
		ts.appendChild(document.createTextNode(v));
		v = ts.innerHTML;
		Ext.fly(ts).setWidth(this.el.getWidth());
		if(v.length &lt; 1){
			v = "&amp;#160;&amp;#160;";
		}else{
			if(Ext.isIE){
				v = v.replace(/\n/g, '&lt;p&gt;&amp;#160;&lt;/p&gt;');
			}
			v += this.growAppend;
		}
		ts.innerHTML = v;
		var h = Math.min(this.growMax, Math.max(ts.offsetHeight, this.growMin)+this.growPad);
		if(h != this.lastHeight){
			if(Ext.currentCellNode){
				if(h&gt;Ext.currentCellNode.clientHeight){
					this.lastHeight = h;
					this.el.setHeight(h);
					this.fireEvent("autosize", this, h);
					if(Ext.isIE){
						Ext.currentCellNode.style.height=h;
					}else{
						Ext.currentCellNode.setStyle('height:'+h+'px');

					}
				}
			}else{
				this.lastHeight = h;
				this.el.setHeight(h);
				this.fireEvent("autosize", this, h);
			}
		}
	}
});

// ------------------------------------ wzToolTip tt_Init ------------------------------------
function tt_Init2(){
	if(!(tt_op || tt_n4 || tt_n6 || tt_ie || tt_w3c)) return;
	var htm = tt_n4? '&lt;div style="position:absolute;"&gt;&lt;/div&gt;' : '', tags, t_tj, over, esc = 'return escape(';
	var i = tt_tags.length;
	while(i--){
		tags = tt_ie? (document.all.tags(tt_tags[i]) || 1)
			: document.getElementsByTagName? (document.getElementsByTagName(tt_tags[i]) || 1)
			: (!tt_n4 &amp;&amp; tt_tags[i]=="a")? document.links
			: 1;
		if(tt_n4 &amp;&amp; (tt_tags[i] == "a" || tt_tags[i] == "layer")) tags = tt_N4Tags(tt_tags[i]);
		var j = tags.length;
		while(j--){
			if(typeof (t_tj = tags[j]).onmouseover == "function" &amp;&amp; t_tj.onmouseover.toString().indexOf(esc) != -1 &amp;&amp; !tt_n6 || tt_n6 &amp;&amp; (over = t_tj.getAttribute("onmouseover")) &amp;&amp; over.indexOf(esc) != -1){
				if(over) t_tj.onmouseover = new Function(over);
				var txt = unescape(t_tj.onmouseover());
				htm += tt_Htm(
					t_tj,
					"tOoLtIp"+i+""+j,
					txt.wzReplace("&amp; ","&amp;")
				);
				t_tj.onmouseover = new Function('e',
					'tt_Show(e,'+
					'"tOoLtIp' +i+''+j+ '",'+
					((typeof t_tj.T_ABOVE != tt_u)? t_tj.T_ABOVE : ttAbove)+','+
					((typeof t_tj.T_DELAY != tt_u)? t_tj.T_DELAY : ttDelay)+','+
					((typeof t_tj.T_FIX != tt_u)? '"'+t_tj.T_FIX+'"' : '""')+','+
					((typeof t_tj.T_LEFT != tt_u)? t_tj.T_LEFT : ttLeft)+','+
					((typeof t_tj.T_OFFSETX != tt_u)? t_tj.T_OFFSETX : ttOffsetX)+','+
					((typeof t_tj.T_OFFSETY != tt_u)? t_tj.T_OFFSETY : ttOffsetY)+','+
					((typeof t_tj.T_STATIC != tt_u)? t_tj.T_STATIC : ttStatic)+','+
					((typeof t_tj.T_STICKY != tt_u)? t_tj.T_STICKY : ttSticky)+','+
					((typeof t_tj.T_TEMP != tt_u)? t_tj.T_TEMP : ttTemp)+
					');'
				);
				t_tj.onmouseout = tt_Hide;
				if(t_tj.alt) t_tj.alt = "";
				if(t_tj.title) t_tj.title = "";
			}
		}
	}
	Element.insert("tooltip_div",{bottom:htm});
	if(document.getElementById) tt_ifrm = document.getElementById("TTiEiFrM");
}

// ------------------------------------ edit grid definition ------------------------------------

var data00 = "$msg.get('ace.lesson.plan.procedures.row1.time_sample')";
var data10 = "$msg.get('ace.lesson.plan.procedures.row2.time_sample')";
var data11 = "$msg.get('ace.lesson.plan.procedures.row2.learningtask_sample')";
var data12 = "$msg.get('ace.lesson.plan.procedures.row2.methodorprocedure_sample')";

var data=[
{id:1,time:data00,task:'',method:''},
{id:1,time:data10,task:data11,method:data12},
{id:1,time:'',task:'',method:''},
{id:1,time:'',task:'',method:''},
{id:1,time:'',task:'',method:''},
{id:1,time:'',task:'',method:''},
{id:1,time:'',task:'',method:''},
{id:1,time:'',task:'',method:''}
];

var store=new Ext.data.JsonStore(
{data:data,fields:["id","time","task","method"]}); 
#set($info_img = '/xwiki/skins/curriki8/icons/exclamation.png')
var tooltip1="&lt;span class=\"tooltip-generator\"&gt;&lt;span class=\"tooltip_span\" onmouseover=\"this.WIDTH='300'; return escape('$msg.get("ace.lesson.plan.procedures.time.tooltip")');\"&gt;&lt;img src='/xwiki/skins/curriki8/icons/exclamation.png' id='tooltip-image-instruction' class='tooltip-image'/&gt;&lt;/span&gt;&lt;/span&gt;";
var tooltip2="&lt;span class=\"tooltip-generator\"&gt;&lt;span class=\"tooltip_span\" onmouseover=\"this.WIDTH='300'; return escape('$msg.get("ace.lesson.plan.procedures.learningtask.tooltip")');\"&gt;&lt;img src='/xwiki/skins/curriki8/icons/exclamation.png' id='tooltip-image-instruction' class='tooltip-image'/&gt;&lt;/span&gt;&lt;/span&gt;";
var tooltip3="&lt;span class=\"tooltip-generator\"&gt;&lt;span class=\"tooltip_span\" onmouseover=\"this.WIDTH='300'; return escape('$msg.get("ace.lesson.plan.procedures.methods.tooltip")');\"&gt;&lt;img src='/xwiki/skins/curriki8/icons/exclamation.png' id='tooltip-image-instruction' class='tooltip-image'/&gt;&lt;/span&gt;&lt;/span&gt;";

var colM = new Ext.grid.ColumnModel([
		{id:"0",header:"Time"+tooltip1,dataIndex:"time",sortable:false,fixed:true,width:100,menuDisabled:true,editor:new Ext.form.TextArea({grow:true,fieldClass:'x-form-field-ace'})},
		{id:"1",header:"Learning Task"+tooltip2,dataIndex:"task",sortable:false,fixed:true,width:200,menuDisabled:true,editor:new Ext.form.TextArea({grow:true,fieldClass:'x-form-field-ace'})},
		{id:"2",header:"Method or Procedure"+tooltip3,dataIndex:"method",sortable:false,fixed:true,menuDisabled:true,editor:new Ext.form.TextArea({grow:true,fieldClass:'x-form-field-ace'})}
	]);



function fn() { 
	grid = new Ext.grid.EditorGridPanel(
{renderTo:"procedures_div",title:"",height:200,width:570, cm:colM,store:store,autoExpandColumn:2,clicksToEdit:1,autoHeight:true,autoEncode:true,
	cls :' x-form-field-ace;',
	viewConfig: {scrollOffset: 2},
	fitContainer: true});

grid.on("cellclick", this.cellClick);
grid.on("afteredit",this.afterEdit,this);
grid.addListener("keyDown", function(e){
    if (e.isNavKeyPress()) {		
			if (isJumpToNext) {
				clickTabInGridToNextNum = clickTabInGridToNextNum + 1;
				if (clickTabInGridToNextNum == 2) {
				    isJumpToNext = false;
					clickTabInGridToNextNum = 0;
					document.getElementById("addRowBtn").focus();
				}
			} else if (isJumpToPre) {
				clickTabInGridToPreNum = clickTabInGridToPreNum + 1;
				if (clickTabInGridToPreNum == 2) {
					isJumpToPre = false;
					clickTabInGridToPreNum = 0;
					document.getElementById("slp_anticipated_problems").focus();
				}
			}
		} 
});
grid.getSelectionModel().on("cellselect", function(sel, row, col) {
	curRow = row;curCol = col;
	if (row !=0 &amp;&amp; col !=0 &amp;&amp; row == grid.getStore().getCount()-1 &amp;&amp; col == grid.getColumnModel().getColumnCount()-1) {
		isJumpToNext = true;
	} else {
		isJumpToNext = false;
	}
	if (row == 0 &amp;&amp; col == 0) {
		isJumpToPre = true;
	} else {
		isJumpToPre = false;
	}
});
tt_Init2();

} 

Ext.onReady(fn); 

function cellClick(obj, row, col, e){

	var record = obj.store.getAt(row);
	if(row == 0 &amp;&amp; col == 0){
		if(record.get("time") == data00)
			record.set("time", "");
	}else if(row == 1 &amp;&amp; col == 0){
		if(record.get("time") == data10)
			record.set("time", "");
	}else if(row == 1 &amp;&amp; col == 1){
		if(record.get("task") == data11)
			record.set("task", "");
	}else if(row == 1 &amp;&amp; col == 2){
		if(record.get("method") == data12)
			record.set("method", "");
	}
	//store.commitChanges(); 
}


function afterEdit(obj, row, col, e){
	var r=obj.record;
	var id=r.get("id");
	var name=r.get("name");
	//store.commitChanges(); 
	//Ext.MessageBox.alert("alertdiv","Hello,easyjf open source"); 
}

// insert new row
function addrow(){
	data=[{id:1,time:'',task:'',method:''}];
	store.loadData(data, true);
	return false;
}
function chekcTableText(){
	
	var arr = store.data;
	for(i=0;i&lt;arr.length;i++){
		var record = store.getAt(i);
		if(i == 0){
			if((record.get("time") != data00 &amp;&amp; record.get("time") != "") || record.get("task") != "" || record.get("method") != ""){
				return true;
			}
		}else if(i == 1){
			if((record.get("time") != data10 &amp;&amp; record.get("time") != "") || (record.get("task") != data11 &amp;&amp; record.get("task") != "") 
				|| (record.get("method") != data12 &amp;&amp; record.get("method") != "")){
				return true;
			}
		}else if(record.get("time") != "" || record.get("task") != "" || record.get("method") != ""){
			return true;
		}
	}
	return false;
}	

function formatTableString(str){
	str = str.replace(/&lt;br\/&gt;/gi,'\r\n');
	str = Ext.util.Format.htmlDecode(str);
	str = formatString(str, /#/g, "&amp;#35;");
	str = formatString(str, /1/g, "&amp;#49;");
	str = formatString(str, /\*/g, "&amp;#42;");
	str = formatString(str, /a/g, "&amp;#97;");
	str = formatString(str, /A/g, "&amp;#65;");
	str = formatString(str, /i/g, "&amp;#105;");
	str = formatString(str, /I/g, "&amp;#73;");
	str = formatString(str, /g/g, "&amp;#103;");
	str = formatString(str, /h/g, "&amp;#104;");
	str = formatString(str, /k/g, "&amp;#107;");
	str = formatString(str, /_/g, "&amp;#95;");
	str = formatString(str, /~/g, "&amp;#126;");
	str = formatString(str, /-/g, "&amp;#45;");
	str = formatString(str, /{/g, "&amp;#123;");
	str = formatString(str, /}/g, "&amp;#125;");
	str = formatString(str, /\(/g, "&amp;#40;");
	str = formatString(str, /\)/g, "&amp;#41;");
	str = formatString(str, /\|/g, "&amp;#124;");
	str = formatString(str, /\$/g, "&amp;#36;");
	str = formatString(str, /@/g, "&amp;#64;");
	str = formatString(str, /\[/g, "&amp;#91;");
	str = formatString(str, /\]/g, "&amp;#93;");
	str = formatString(str, /&lt;/g, "&amp;#60;");
	str = formatString(str, /&gt;/g, "&amp;#62;");
	str = str.replace(/\r\n/gi,"\\\\")
	return str;
}
function formatString(str, reg, repls){
	return str.replace(reg, repls)
}	

function getTableText(){
	var str = '\{table\}';
	str += 'Time | Learning Task | Method or Procedure\r\n';

	var arr = store.data;
	for(i=0;i&lt;arr.length;i++){
		var record = store.getAt(i);
		var time = record.get("time");
		var task = record.get("task");
		var method = record.get("method");
		
		if(i == 0 &amp;&amp; time == data00){
			time = "";
		}
		if(i == 1){
			if(time == data10){
				time = "";
			}
			if(task == data11){
				task = "";
			}
			if(method == data12){
				method = "";
			}
		}

		if(time != "" || task != "" || method != ""){
			time = formatTableString(time);
			time = (time == "" ? "&amp;#160;" : time);
			task = formatTableString(task);
			task = (task == "" ? "&amp;#160;" : task);
			method = formatTableString(method);
			method = (method == "" ? "&amp;#160;" : method);
			str += time + ' | ' + task + ' | ' + method + ' \r\n';
		}
	}
	str += '\{table\}';

	return str;
}
&lt;/script&gt;
{/pre}
####################################	JS end , title
#set( $noDialogs = $request.getParameter("noDialogs") )  ## ?noDialogs=1 turns off add-path dialogs, for testing, or to enable "edit-again"

  &lt;div class="header"&gt;
  #curriki_formtitle($msg.get("ace.lesson.plan.title"))
  $msg.get("ace.lesson.plan.title.description") &lt;a href="$msg.get('ace.lesson.plan.title.description.link1.url')" target="_blank"&gt;$msg.get("ace.lesson.plan.title.description.link1")&lt;/a&gt;&lt;span class="separator"&gt;&amp;nbsp;|&amp;nbsp;&lt;/span&gt;&lt;a href="$msg.get('ace.lesson.plan.title.description.link3.url')" target="_blank"&gt;$msg.get("ace.lesson.plan.title.description.link3")&lt;/a&gt;&lt;span class="separator"&gt;&amp;nbsp;|&amp;nbsp;&lt;/span&gt;&lt;a href="$msg.get('ace.lesson.plan.title.description.link2.url')" target="_blank"&gt;$msg.get("ace.lesson.plan.title.description.link2")&lt;/a&gt;&lt;a href="$msg.get('ace.lesson.plan.title.description.link2.thumbnail.url')"&gt;&lt;img src="$msg.get('ace.lesson.plan.title.description.link2.thumbnail')" align="middle"&gt;&lt;/a&gt;
  &lt;br /&gt;$msg.get("form.required.fields.instruction")
  &lt;/div&gt;

  &lt;form action="" class="curriki-form1" id="inline" method="post"&gt;
	  &lt;input type="hidden" name="xredirect" value="$xwiki.getFormEncoded($xwiki.getRequestURL())" /&gt;
	  ##sign validation result, default is validate not passed
	  &lt;input type="hidden"  name="CurrikiCode.TextAssetClass_0_text" id="CurrikiCode.TextAssetClass_0_text" value="$msg.get('form.done.wysiwyg.error.wikitext')" /&gt;
	  &lt;input type="hidden"  name="CurrikiCode.TextAssetClass_0_type" id="CurrikiCode.TextAssetClass_0_type" value="0" /&gt;
	  &lt;input type="hidden"  name="CurrikiCode.AssetClass_0_instructional_component2" id="CurrikiCode.AssetClass_0_instructional_component2" value="curriculum_lp" /&gt;
	  &lt;input type="hidden"  name="CurrikiCode.AssetClass_0_hidden_from_search" id="CurrikiCode.AssetClass_0_hidden_from_search" value="0" /&gt; 
	  &lt;input type="hidden"  name="CurrikiCode.AssetClass_0_category" id="CurrikiCode.AssetClass_0_category" value="text" /&gt; 
	  ## successMessage is null, validation not passed
	  &lt;input type="hidden" 	name="successMessage" id="successMessage" value=""      /&gt;
	  &lt;input type="hidden" 	name="page"		value="$!request.page"		/&gt;
	  &lt;input type="hidden"	name="pageName"		value="$!newAsset.fullName"	/&gt;
	  &lt;input type="hidden"	name="publishSpace"	value="$!publishSpace"		/&gt;
	  &lt;input type="hidden"	name="parentPage"	value="$!parentPage"		/&gt;
	  #if( "$!noDialogs"!="" )
		&lt;input type="hidden"	name="noDialogs"	value="$noDialogs"		/&gt;
	  #else                                   
		&lt;input type="hidden"	name="flow"		value="$!flow"			/&gt;
			&lt;input type="hidden"	name="createLessonURL"		value="$msg.get('ace.lesson.plan.url')"	/&gt; ## for ICT
		&lt;input type="hidden"	name="cameFrom"  #if( "$!cameFrom"=="" ) value="$msg.get('ace.lesson.plan.url')"  #else   value="$!cameFrom"   #end /&gt;
	  #end             
####################################	step1  
  #curriki_formpart_begin($msg.get("ace.lesson.plan.step1.header"))
  #curriki_forminstructions($msg.get("ace.lesson.plan.step1.instruction"))
  #curriki_formprompt($msg.get("ace.lesson.plan.title_title"), $msg.get("ace.lesson.plan.title_tooltip"), $msg.get("ace.lesson.plan.title_txt"), true, "medium")
  ##$newAsset.display("title","edit")
  &lt;input type="text" id="CurrikiCode.AssetClass_0_title" name="CurrikiCode.AssetClass_0_title" /&gt;
  #curriki_formprompt($msg.get("ace.lesson.plan.description_title"), $msg.get("ace.lesson.plan.description_tooltip"), $msg.get("ace.lesson.plan.description_txt"), true, "medium")
  $newAsset.display("description","edit")
  &lt;table class="subject-educational"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;
  #curriki_formprompt($msg.get("sri.fw_items_title"), $msg.get("sri.fw_items_tooltip"), $msg.get("sri.fw_items_txt"), true, "")
  $newAsset.display("fw_items","edit")
  &lt;/td&gt;&lt;td&gt;
  #curriki_formprompt($msg.get("sri.educational_level_title"), $msg.get("sri.educational_level_tooltip"), $msg.get("sri.educational_level_txt"), true, "medium")
  $newAsset.display("educational_level","edit")
  &lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt; ##class="subject-educational"
  #curriki_formprompt($msg.get("sri.keywords_title"), $msg.get("sri.keywords_tooltip"), $msg.get("sri.keywords_txt"), false, "medium")
  $newAsset.display("keywords","edit")
  #curriki_formprompt($msg.get("sri.language_title"), $msg.get("sri.language_tooltip"), $msg.get("sri.language_txt"), false, "medium")
  $newAsset.display("language","edit")
  #curriki_formpart_end() 
####################################	step2
  #curriki_formpart_begin($msg.get("ace.lesson.plan.step2.header")) ## {
  #curriki_forminstructions($msg.get("ace.lesson.plan.step2.instruction"))

  #curriki_formprompt($msg.get("ace.lesson.plan.introduction.title"), $msg.get("ace.lesson.plan.introduction.tooltip"), $msg.get("ace.lesson.plan.introduction.instruction"), true, "medium")
  &lt;textarea id='slp_number_days' name='slp_number_days' class='curriki-form1_textarea'&gt;&lt;/textarea&gt;  

  #curriki_formprompt($msg.get("ace.lesson.plan.group.size.title"), $msg.get("ace.lesson.plan.group.size.tooltip"), $msg.get("ace.lesson.plan.group.size.instruction"), true, "medium")
  &lt;textarea id='slp_prior_knowledge' name='slp_prior_knowledge' class='curriki-form1_textarea'&gt;&lt;/textarea&gt;  

  #curriki_formprompt($msg.get("ace.lesson.plan.learning.objectives.title"), $msg.get("ace.lesson.plan.learning.objectives.tooltip"), $msg.get("ace.lesson.plan.learning.objectives.instruction"), true, "medium")
  &lt;textarea id='slp_lesson_objective' name='slp_lesson_objective' class='curriki-form1_textarea'&gt;&lt;/textarea&gt;  

  #curriki_formprompt($msg.get("ace.lesson.plan.assessment.title"), $msg.get("ace.lesson.plan.assessment.tooltip"), $msg.get("ace.lesson.plan.assessment.instruction"), true, "medium")
  &lt;textarea id='slp_lesson_assessment' name='slp_lesson_assessment' class='curriki-form1_textarea'&gt;&lt;/textarea&gt;  


  #curriki_formprompt($msg.get("ace.lesson.plan.standards.title"), $msg.get("ace.lesson.plan.standards.tooltip"), $msg.get("ace.lesson.plan.standards.instruction"), false, "medium")
  &lt;textarea id='slp_benchmark_standards' name='slp_benchmark_standards' class='curriki-form1_textarea'&gt;&lt;/textarea&gt;  

  #curriki_formprompt($msg.get("ace.lesson.plan.materials.title"), $msg.get("ace.lesson.plan.materials.tooltip"), $msg.get("ace.lesson.plan.materials.instruction"), false, "medium")
  &lt;textarea id='slp_materials_needed' name='slp_materials_needed' class='curriki-form1_textarea'&gt;&lt;/textarea&gt;  

  #curriki_formprompt($msg.get("ace.lesson.plan.enrichment.title"), $msg.get("ace.lesson.plan.enrichment.tooltip"), $msg.get("ace.lesson.plan.enrichment.instruction"), false, "medium")
  &lt;textarea id='slp_enrichment' name='slp_enrichment' class='curriki-form1_textarea'&gt;&lt;/textarea&gt;  

  #curriki_formprompt($msg.get("ace.lesson.plan.accommodations.title"), $msg.get("ace.lesson.plan.accommodations.tooltip"), $msg.get("ace.lesson.plan.accommodations.instruction"), false, "medium")
  &lt;textarea id='slp_accommodations' name='slp_accommodations' class='curriki-form1_textarea'&gt;&lt;/textarea&gt;  

  #curriki_formprompt($msg.get("ace.lesson.plan.anticipated.problems.title"), $msg.get("ace.lesson.plan.anticipated.problems.tooltip"), $msg.get("ace.lesson.plan.anticipated.problems.instruction"), false, "medium")
  &lt;textarea id='slp_anticipated_problems' name='slp_anticipated_problems' class='curriki-form1_textarea'&gt;&lt;/textarea&gt;  

  #curriki_formprompt($msg.get("ace.lesson.plan.procedures.title"), $msg.get("ace.lesson.plan.procedures.tooltip"), $msg.get("ace.lesson.plan.procedures.instruction"), true, "medium")
  &lt;div id="procedures_div"&gt; &lt;/div&gt;  &lt;button class="button button-orange" id="addRowBtn" onclick="return addrow();"&gt;$msg.get("ace.lesson.plan.procedures.addrow")&lt;/button&gt;

## Required Resources (attachments) -- fileselection w/ buttons
  #curriki_formprompt($msg.get("lesson.plan.required.attachments.title"), $msg.get("lesson.plan.required.attachments.tooltip"), $msg.get("lesson.plan.required.attachments.instruction"), false, "")
&lt;iframe src="$newAsset.getURL("view", "xpage=lpattachments")"
		onload="try { setAttachmentsIframeSize(); } catch(e) { alert('iframe onload error: '+e+' ...'); return false; }"
		id="attachment_iframe" name="attachment_iframe" width="100%" scrolling="auto" marginheight="0" marginwidth="0"	frameborder="0" &gt;
  &lt;h2&gt;Sorry, your browser doesn't support iframes. Attachment Uploading functionality disabled.&lt;/h2&gt; 
&lt;/iframe&gt;
  #curriki_formpart_end() ## }
####################################	step3
  #curriki_formpart_begin($msg.get("form.scratch.step3.header")) 
  #curriki_forminstructions($msg.get("form.scratch.step3.instruction"))
  #curriki_formprompt($msg.get("sri.right_holder_title"), $msg.get("sri.right_holder_tooltip"), $msg.get("sri.right_holder_txt"), true, "medium")
  $newAsset.display("rightsHolder","edit")
  #curriki_formprompt($msg.get("sri.rights_title"), $msg.get("sri.rights_tooltip"), $msg.get("sri.rights_txt"), false, "medium")
  $newAsset.display("rights","edit")

  #curriki_formprompt($msg.get("sri.license_type_title"), $msg.get("sri.license_type_tooltip"), $msg.get("sri.license_type_txt"), false, "medium")
  &lt;p&gt;&lt;label&gt;$msg.get("sri.license_type_heading")&lt;/label&gt;&lt;/p&gt;		
  $newAsset.display("licenseType","edit")
  #curriki_formpart_end() 
####################################	step4
  #curriki_formpart_begin($msg.get("form.scratch.step4.header")) 
  &lt;p&gt;&lt;label&gt;$msg.get("ace.form.scratch.step4.instruction")&lt;/label&gt;&lt;/p&gt;
  &lt;p class="links"&gt;
	 &lt;button
	  onclick="try { if (document.forms.inline.onsubmit) document.forms.inline.onsubmit(); if (checkStandardLessonPlanForm()) { clearUnloadDialog(); startWaitingDialog(); document.forms.inline.action='$msg.get("form.done.url")'; document.forms.inline.submit(); } return false; } catch(e) { alert('$msg.get("form.scratch.submit.button") button onclick error: '+e+' ...'); return false; }"
	  &gt;$msg.get("form.scratch.submit.button")&lt;/button&gt;
	 #if( "$!cameFrom" != "" ) 
	   #set( $cancelURL = $cameFrom )
	 #else 
	   #set( $cancelURL = $xwiki.getURL("Main.WebHome") ) ## cameFrom not set means go to WebHome
	 #end 
	 &lt;button class="cancel"
	  onclick="try { clearUnloadDialog(); window.location.href='$cancelURL'; return false; } catch(e) { alert('$msg.get("form.scratch.cancel.button") button onclick error: '+e+' ...'); return false; }"
	  &gt;$msg.get("form.scratch.cancel.button")&lt;/button&gt;
  &lt;/p&gt;
  #curriki_formpart_end() 
&lt;!--

  &lt;div class="tooltips"&gt;
	{pre} ##$xwiki.addTooltipJS() {/pre}
  &lt;/div&gt;
--&gt;
&lt;div id="tooltip_div" class="tooltips"&gt;&lt;/div&gt;
  &lt;/form&gt;

{pre}
&lt;script language="javascript" type="text/javascript"&gt;
function startWaitingDialog() {
#if( "$!noDialogs"!="1" )
  Curriki.showLoading();
#end
}
setUnloadDialog();
//tinyMCE.convertURL = function(url, node, on_save) { return url; };
&lt;/script&gt;
{/pre}
#end ## } -- else, aka "$!newAsset"!="" 
#end ## } -- $context.user=="XWiki.XWikiGuest"</content>
</xwikidoc>
