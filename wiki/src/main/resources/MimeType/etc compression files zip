<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc>
<web>MimeType</web>
<name>etc compression files zip</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent></parent>
<creator></creator>
<author>XWiki.dward</author>
<customClass></customClass>
<contentAuthor>XWiki.dward</contentAuthor>
<creationDate>1173208182000</creationDate>
<date>1180972257000</date>
<contentUpdateDate>1203116887000</contentUpdateDate>
<version>1.88</version>
<title></title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/1.0</syntaxId>
<object>
<class>
<name>XWiki.TagClass</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<tags>
<cache>0</cache>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>tags</name>
<number>1</number>
<prettyName>Tags</prettyName>
<relationalStorage>1</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>30</size>
<unmodifiable>0</unmodifiable>
<values></values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</tags>
</class>
<name>MimeType.etc compression files zip</name>
<number>0</number>
<className>XWiki.TagClass</className>
<property>
<tags/>
</property>
</object>
<content>#if(! $mimedoc)
 #set($mimedoc=$doc)
#end

$!mimedoc.description

#if(!$treeviewid)
#set($treeviewid = 1)
#else
#set($treeviewid = 1 + $treeviewid)
#end
#set($zipObj = $mimedoc.getObject("MimeType.etc compression files"))

&lt;div style="padding:0px 120px; text-align:left;"&gt;
&lt;div align="center"&gt;
&lt;a id="treeview${treeviewid}Button" class="button" href="#" onclick="toggleTreeviewVisibility($treeviewid);return false;" title="$msg.get("mime.zip.opencontents")"&gt;$msg.get("mime.zip.opencontents")&lt;/a&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&lt;a class="button" href="#" onclick="window.open('$mimedoc.getAttachmentURL("$mimedoc.attachmentList.get(0).filename")$!mimedoc.getValue("defaultfile", $zipObj)');return false;" title="$msg.get("mime.zip.launch")"&gt;$msg.get("mime.zip.launch")&lt;/a&gt;
&lt;/div&gt;
&lt;script type="text/javascript"&gt;
function toggleTreeviewVisibility(seccounter){
  var seccontent = document.getElementById("treeview" + seccounter);
  if(eltHasClass(seccontent, "hidden")){
    rmClass(seccontent, "hidden");
    document.getElementById("treeview" + seccounter + "Button").innerHTML = "$msg.get("mime.zip.closecontents")";
    // erase cookie
    eraseCookie("treeview" + seccounter + "Hidden");
  }
  else{
    addClass(seccontent, "hidden");
    document.getElementById("treeview" + seccounter + "Button").innerHTML = "$msg.get("mime.zip.opencontents")";
    // set cookie
    createCookie("treeview" + seccounter + "Hidden", true, "");
  }
  return false;
}
&lt;/script&gt;

{pre}
#if($treeviewid == 1)
&lt;style type="text/css"&gt;
@import "/xwiki/yui/treeview/assets/tree.css";
&lt;/style&gt;
&lt;script type="text/javascript" src="/xwiki/yui/yahoo/yahoo-min.js" &gt;&lt;/script&gt;
&lt;script type="text/javascript" src="/xwiki/yui/treeview/treeview-min.js" &gt;&lt;/script&gt;
&lt;script type="text/javascript" src="/xwiki/yui/treeview/checknode.js"&gt;&lt;/script&gt;
#end
&lt;div class="xmblabel"&gt;&lt;/div&gt;
&lt;div class="xmbfield"&gt;
#set($attach = $mimedoc.attachmentList.get(0).filename)
#set($tmpActiveClass = $mimedoc.getActiveClass())
$mimedoc.use("MimeType.etc compression files")
##if ($mimedoc.getValue("defaultfile"))
##$msg.get("asset.archive.viewarchivecontent")
##end
&lt;div id="treeview${treeviewid}" class="hidden"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
	var tree${treeviewid};
	var nodes${treeviewid} = {};
	var nodeIndex${treeviewid};
        var baseUrl${treeviewid} = "";

    function addTreeElement${treeviewid}(id, text, parent) {
	    var parent2;
	    if (parent=="")
	     parent2 = tree${treeviewid}.getRoot();
	    else
	     parent2 = nodes${treeviewid}[parent];
            nodes${treeviewid}[id] = new YAHOO.widget.TextNode(text, parent2, false)
        nodes${treeviewid}[id].onLabelClick = onLabelClick${treeviewid};
        nodes${treeviewid}[id].labelElId = id;
    }

	var callback = null;
    function onLabelClick${treeviewid}(node) {
       var path = node.labelElId;
       if (!(path[path.length - 1] == "/"))
         window.open(baseUrl${treeviewid} + "/" + path);
    }


	function treeInit${treeviewid}() {
		tree${treeviewid} = new YAHOO.widget.TreeView("treeview${treeviewid}");
	    //var tree = tree${treeviewid};
        //var nodes = nodes${treeviewid};
#set($zipexp = $xwiki.getPlugin("zipexplorer"))
#set($treelist = $zipexp.getFileTreeList($mimedoc, $attach))
        baseUrl${treeviewid} = "$mimedoc.getAttachmentURL("$attach")";
        #foreach($item in $treelist)
        #set($checked = $selectlist.contains($item.getId()))
        #if ($item.value.length() &gt; 80)
         #set($title_item = $item.value.substring(0, 80))
        #else
         #set($title_item = $item.value)
        #end
        #set($title_item = $title_item.replaceAll("[\r\n]"," "))
        addTreeElement${treeviewid}("$item.id", "$title_item", "$item.parent")
        #end
    tree${treeviewid}.draw();
	}

    // Init the tree
    treeInit${treeviewid}();
&lt;/script&gt;
#if($tmpActiveClass)
$mimedoc.use($tmpActiveClass)
#end
&lt;/div&gt;
{/pre}
&lt;/div&gt;</content>
</xwikidoc>
