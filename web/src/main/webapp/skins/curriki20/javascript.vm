#**
  * Setup the external Javascript files loaded for the curriki pages
  * @author Curriki dev team
  *#
#if($globalDebug)
	#set($debugging = "-debug")
#else
	#set($debugging = "")
#end
#set($debugging = "-debug")
<script type="text/javascript" src="$xwiki.getSkinFile("js/prototype/prototype.js")"></script>
<script type="text/javascript" src="$xwiki.getSkinFile("js/scriptaculous/effects.js")"></script>
<script type="text/javascript">
//<![CDATA[
var ejLoc = (("https:" == document.location.protocol) ? "https://"+document.location.host+"/xwiki/skins/curriki20/ext-2.3.0/" : "http://extjs.cachefly.net/ext-2.3.0/");
document.write(unescape("%3Cscript src='" + ejLoc + "adapter/ext/ext-base.js' type='text/javascript'%3E%3C/script%3E"));
document.write(unescape("%3Cscript src='" + ejLoc + "ext-all${debugging}.js' type='text/javascript'%3E%3C/script%3E"));
//]]>
</script>
#if($doc.fullName != "Main.JoinCurriki" || $context.user != "XWiki.XWikiGuest")
  #if("$!request.lang" != "")
    #set($lang = $request.lang)
  #else
    #set($lang = $xwiki.getLanguagePreference())
  #end
  #if("$!lang" == "")
    #set($lang = "en")
  #end
##
## The xwiki translation files are converted for use with javascript
## and loaded via the /js/0/lang_${lang}.js URL using an apache rewrite rule
##
## If not using xwiki standalone you need to comment the following line
<script src="/xwiki/bin/view/Util/JSTrans?xpage=plain&lang=${lang}"></script>
<script src="/xwiki/js/i18n.js"></script>
## and uncomment the next one out instead
##<script src="/js/1/lang_${lang}.js"></script>
<script src="/xwiki/js/curriki-main${debugging}.js"></script>
<script src="/xwiki/js/curriki-module-addpath${debugging}.js"></script>
<script src="/xwiki/js/curriki-module-organize${debugging}.js"></script>
<script src="/xwiki/js/curriki-module-nominate${debugging}.js"></script>
<script src="/xwiki/js/curriki-module-review${debugging}.js"></script>
<script src="/xwiki/js/curriki-module-unnominate${debugging}.js"></script>
<script src="/xwiki/js/curriki-module-partner${debugging}.js"></script>
<script src="/xwiki/js/curriki-module-asterixReview${debugging}.js"></script>
<script src="/xwiki/js/curriki-module-flag${debugging}.js"></script>
#end

<script type="text/javascript">
/* <![CDATA[ */
Ext.ns('Curriki.global');
Curriki.global.username = "${context.user}";
Curriki.global.isAdmin = #if($hasGlobalAdmin)true#{else}false#{end};
/* ]]> */
</script>

##
## CSS files related to JS libraries.
##
<link href="$xwiki.getSkinFile("js/xwiki/suggest/ajaxSuggest.css", true)" rel="stylesheet" type="text/css" />
<link href="$xwiki.getSkinFile("js/xwiki/lightbox/lightbox.css", true)" rel="stylesheet" type="text/css" />
<!--[if IE]>
  <link href="$xwiki.getSkinFile("js/xwiki/lightbox/lightboxIE.css", true)" rel="stylesheet" type="text/css" />
<![endif]-->
##
## JS Libraries.
##
$xwiki.jsfx.use('js/scriptaculous/effects.js', true)
$xwiki.jsfx.use('js/xwiki/widgets/modalPopup.js', true)
$xwiki.ssfx.use('js/xwiki/widgets/modalPopup.css', true)
$xwiki.jsfx.use('js/xwiki/widgets/jumpToPage.js', true)
$xwiki.ssfx.use('js/xwiki/widgets/jumpToPage.css', {'forceSkinAction' : true, 'language' : $context.language})
$xwiki.jsfx.use('uicomponents/widgets/confirmationBox.js', true)
$xwiki.ssfx.use('uicomponents/widgets/confirmationBox.css', true)
$xwiki.jsfx.use('uicomponents/widgets/confirmedAjaxRequest.js', true)
$xwiki.jsfx.use('uicomponents/widgets/notification.js', true)
$xwiki.ssfx.use('uicomponents/widgets/notification.css', true)
$xwiki.jsfx.use('uicomponents/widgets/list/xlist.js')
$xwiki.jsfx.use('js/xwiki/suggest/ajaxSuggest.js')
<script type="text/javascript" src="$xwiki.getSkinFile("js/xwiki/xwiki.js", true)"></script>
<script type="text/javascript">
// <![CDATA[
XWiki.webapppath = "${xwiki.webAppPath}";
XWiki.servletpath = "${xwiki.servletPath}";
XWiki.contextPath = "${request.contextPath}";
XWiki.mainWiki = "$!{escapetool.javascript(${xcontext.mainWikiName})}";
XWiki.currentWiki = "$!{escapetool.javascript(${xcontext.database})}";
XWiki.currentSpace = "$!{escapetool.javascript($doc.space)}";
XWiki.currentPage = "$!{escapetool.javascript($doc.name)}";
XWiki.editor = "$!{escapetool.javascript($editor)}";
XWiki.viewer = "$!{escapetool.javascript($viewer)}";
XWiki.contextaction = "${xcontext.getAction()}";
XWiki.docisnew = $!doc.isNew();
XWiki.docsyntax = "$!doc.getSyntax().toIdString()";
XWiki.blacklistedSpaces = [ #foreach($space in $blacklistedSpaces)#if($velocityCount > 1),#end"$space"#end ];
XWiki.hasEdit = $hasEdit;
XWiki.hasProgramming = $hasProgramming;
XWiki.hasBackupPackImportRights =#if ($xwiki.package) $xwiki.package.hasBackupPackImportRights()#else false#end;
window.docviewurl = "${doc.getURL('view')}";
window.docediturl = "${doc.getURL('edit')}";
window.docsaveurl = "${doc.getURL('save')}";
window.docgeturl = "${doc.getURL('get')}";
// ]]>
</script>
#if(($xcontext.action=="inline")||($xcontext.action=="edit") || ($xcontext.action=="admin"))
$xwiki.get('jsfx').use('uicomponents/widgets/validation/livevalidation_prototype.js')
$xwiki.get('ssfx').use('uicomponents/widgets/validation/livevalidation.css')
<script type="text/javascript">
// <![CDATA[
 var cancelEditNextOnunload;
 var cancelCancelEditFlag = true;
 var  lockEditFlag = false;

 function cancelEditResponse(){
 }

 function cancelEdit(){
     if (cancelCancelEditFlag) {
       var surl = "$doc.getExternalURL("cancel", "ajax=1")";
       var myAjax = new Ajax.Request(
                 surl,
                 {
                     method: 'get',
                     parameters: "",
                     asynchronous: true,
                     discardResponse: true
                 });
        cancelCancelEditFlag = false;
     }
     if (cancelEditNextOnunload!=null)
           cancelEditNextOnunload();
 }

 function lockEdit(){
    if (lockEditFlag==false) {
#if($xcontext.action=="inline")
      var surl = "$doc.getExternalURL("lock")?action=inline&ajax=1&${docvariant.replaceAll("&amp;", "&")}";
#else
      var surl = "$doc.getExternalURL("lock")?ajax=1&${docvariant.replaceAll("&amp;", "&")}";
#end
      var myAjax = new Ajax.Request(
                surl,
                {
                    method: 'get',
                    parameters: "",
                    asynchronous: true
                });
       lockEditFlag = false;
    }
 }

 function prepareCancelEdit() {
    lockEdit();
 }
 function cancelCancelEdit() {
     cancelCancelEditFlag = false;
 }
    Event.observe(window, "unload", cancelEdit);
    Event.observe(window, "pagehide", cancelEdit);
    Event.observe(document, "dom:loaded", prepareCancelEdit);
// ]]>
</script>
#end
##
## Hooks for inserting JavaScript skin extensions
##
## - Skin file extension hook. Placed first since skin extensions might need to have xwiki or external libraries included first to be able to work properly
<!-- com.xpn.xwiki.plugin.skinx.JsSkinFileExtensionPlugin -->
## - Skin extension hook
<!-- com.xpn.xwiki.plugin.skinx.JsSkinExtensionPlugin -->
##
## Compatibility "aspect" file for deprecated code.
## Placed at the very end of the stream so that skin file extensions code can be deprecated easily as well.
##
<script type="text/javascript" src="$xwiki.getSkinFile("js/xwiki/compatibility.js", false)" defer="defer"></script>