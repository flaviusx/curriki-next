<strong id="xwikicontentmenutitle" class="hidden">$msg.get('core.menu.content.title')</strong>
<div class="rightmenu">
##
## Watch menu
##
#if ($hasWatch && !$doc.isNew())
  #set ($isDocWatched = $xwiki.watchlist.isDocumentWatched())
  #if ($isDocWatched)
    #xwikitopmenuentry("$doc.getURL('view', 'xpage=watch&amp;do=removedocument')&amp;xredirect=$doc.getURL()" $msg.get('core.menu.watchlist.remove.page') 'tmUnwatchDocument' 'hasIcon')
  #else
    #xwikitopmenuentry("$doc.getURL('view', 'xpage=watch&amp;do=adddocument')&amp;xredirect=$doc.getURL()" $msg.get('core.menu.watchlist.add.page') 'tmWatchDocument' 'hasIcon')
  #end
#end
</div>
<div class="leftmenu">
#if($hasEdit && !$isReadOnly)
  ## Compute the default edit mode
  #set($editaction = $doc.getDefaultEditMode())
  ##
  ## Edit menu
  ##
  #if($isAdvancedUser)
    #xwikitopmenuentrystart($doc.getURL($editaction, $!languageparams) $msg.get('core.menu.edit') 'tmEdit' 'hasIcon')
    #submenuitem($doc.getURL('edit', "$!{languageparams}&amp;editor=wiki") $msg.get('core.menu.edit.wiki') 'tmEditWiki', '')
    #submenuitem($doc.getURL('edit', "$!languageparams&amp;editor=wysiwyg") $msg.get('core.menu.edit.wysiwyg') 'tmEditWysiwyg', '')
    #submenuitem($doc.getURL('inline', $!languageparams) $msg.get('core.menu.edit.inline') 'tmEditInline', '')
    #submenuseparator()
    #submenuitem($doc.getURL('edit', 'editor=rights') $msg.get('core.menu.edit.rights') 'tmEditRights', '')
    #submenuseparator()
    #submenuitem($doc.getURL('edit', 'editor=object') $msg.get('core.menu.edit.object') 'tmEditObject', '')
    #if($hasAdmin)
      #submenuitem($doc.getURL('edit', 'editor=class') $msg.get('core.menu.edit.class') 'tmEditClass', '')
    #end
    #xwikitopmenuentryend()
  #else ## !isAdvanced
    #xwikitopmenuentry($doc.getURL($editaction, $!languageparams) $msg.get('core.menu.edit') 'tmEdit', 'hasIcon')
  #end
  #if($keyboardShortcutsEnabled)
    <script type="text/javascript">
    //<![CDATA[
      shortcut.add("$msg.get('core.shortcuts.view.edit')",function() { location.href="$doc.getURL($editaction, $!languageparams)"; }, { 'type':'keypress', 'propagate':false, 'disable_in_input':true });
      shortcut.add("$msg.get('core.shortcuts.view.wiki')",function() { location.href="$doc.getURL('edit', "$!{languageparams}&editor=wiki")"; }, { 'type':'keypress', 'propagate':false, 'disable_in_input':true });
      shortcut.add("$msg.get('core.shortcuts.view.wysiwyg')",function() { location.href="$doc.getURL('edit', "$!{languageparams}&editor=wysiwyg")"; }, { 'type':'keypress', 'propagate':false, 'disable_in_input':true });
      shortcut.add("$msg.get('core.shortcuts.view.inline')",function() { location.href="$doc.getURL('inline', $!languageparams)"; }, { 'type':'keypress', 'propagate':false, 'disable_in_input':true });
      shortcut.add("$msg.get('core.shortcuts.view.rights')",function() { location.href="$doc.getURL('edit', 'editor=rights')"; }, { 'type':'keypress', 'propagate':false, 'disable_in_input':true });
      shortcut.add("$msg.get('core.shortcuts.view.objects')",function() { location.href="$doc.getURL('edit', 'editor=object')"; }, { 'type':'keypress', 'propagate':false, 'disable_in_input':true });
      shortcut.add("$msg.get('core.shortcuts.view.class')",function() { location.href="$doc.getURL('edit', 'editor=class')"; }, { 'type':'keypress', 'propagate':false, 'disable_in_input':true });
    //]]>
    </script>
  #end
#end
##
## Export menu
##
#if(!$doc.isNew())
  #xwikitopmenuentrystart('' $msg.get('core.menu.export') 'tmExport' '')
  #submenuitem($doc.getURL('export', "format=pdf&amp;$!docvariant") $msg.get('core.menu.export.pdf') 'tmExportPdf', '')
  #submenuitem($doc.getURL('export', "format=rtf&amp;$!docvariant") $msg.get('core.menu.export.rtf') 'tmExportRtf', '')
  #submenuitem($doc.getURL('export', "format=html&amp;$!docvariant") $msg.get('core.menu.export.html') 'tmExportHtml', '')
  #if($hasAdmin)
    #submenuitem($doc.getURL('export', "format=xar&amp;name=$util.encodeURI($doc.fullName)&amp;pages=$util.encodeURI($doc.fullName)&amp;$!docvariant") $msg.get('core.menu.export.xar') 'tmExportXar', '')
  #end
  #xwikitopmenuentryend()
#end
##
## Actions menu
##
#if(!$doc.isNew())
  #xwikitopmenuentrystart('' $msg.get('core.menu.moreactions') 'tmMoreActions' '')
  #submenuitem($doc.getURL('view', "xpage=print&amp;$!docvariant") $msg.get('core.menu.preview') 'tmPrintPreview', '')
  #submenuitem($doc.getURL('view', "viewer=code") $msg.get('core.menu.view.source') 'tmViewSource', '')
  #set ($canDelete = !$doc.isNew() && $xwiki.checkAccess($doc.fullName, 'delete'))
  #if($canDelete || $xwiki.hasProgrammingRights())
    #submenuseparator()
  #end
  #if($xwiki.hasProgrammingRights())
    #submenuitem($doc.getURL('view', 'xpage=copy') $msg.get('core.menu.copy') 'tmActionCopy', '')
  #end
  #if($canDelete)
    #submenuitem($doc.getURL('view', 'xpage=rename&amp;step=1') $msg.get('core.menu.rename') 'tmActionRename', '')
    #submenuitem($doc.getURL('delete', $!languageparams) $msg.get('core.menu.delete') 'tmActionDelete', '')
  #end
  #xwikitopmenuentryend()
  #if($canDelete && $keyboardShortcutsEnabled)
    <script type="text/javascript">
      //<![CDATA[
      shortcut.add("$msg.get('core.shortcuts.view.delete')",function() { location.href="$doc.getURL('delete', $!languageparams)"; }, { 'type':'keypress', 'propagate':false, 'disable_in_input':true });
      shortcut.add("$msg.get('core.shortcuts.view.rename')",function() { location.href="$doc.getURL('view', 'xpage=rename&amp;step=1')"; }, { 'type':'keypress', 'propagate':false, 'disable_in_input':true });
      //]]>
    </script>
  #end
#end
</div>